[["0",{"pageContent":"State.init(\n    {\n        content:props.content||\"It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the though the transition does limit overflow.\",\n        title:props.title||\"Accordion Item #1\"\n    }\n);\n\nreturn (\n    <div class=\"accordion\" id=\"accordionExample\">\n      <div class=\"accordion-item\">\n        <h2 class=\"accordion-header\" id=\"headingOne\">\n          <button\n            class=\"accordion-button\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#collapseOne\"\n            aria-expanded=\"true\"\n            aria-controls=\"collapseOne\"\n          >\n            {state.title}\n          </button>\n        </h2>\n        <div\n          id=\"collapseOne\"\n          class=\"accordion-collapse collapse show\"\n          aria-labelledby=\"headingOne\"\n          data-bs-parent=\"#accordionExample\"\n        >\n          <div class=\"accordion-body\">\n            {state.content}\n          </div>\n        </div>\n      </div>\n    </div>\n  );","metadata":{"loc":{"lines":{"from":1,"to":35}}}}],["1",{"pageContent":"return (\n    <div>\n      <div class=\"alert alert-primary\" role=\"alert\">\n        A simple primary alert—check it out!\n      </div>\n      <div class=\"alert alert-secondary\" role=\"alert\">\n        A simple secondary alert—check it out!\n      </div>\n      <div class=\"alert alert-success\" role=\"alert\">\n        A simple success alert—check it out!\n      </div>\n      <div class=\"alert alert-danger\" role=\"alert\">\n        A simple danger alert—check it out!\n      </div>\n      <div class=\"alert alert-warning\" role=\"alert\">\n        A simple warning alert—check it out!\n      </div>\n      <div class=\"alert alert-info\" role=\"alert\">\n        A simple info alert—check it out!\n      </div>\n      <div class=\"alert alert-light\" role=\"alert\">\n        A simple light alert—check it out!\n      </div>\n      <div class=\"alert alert-dark\" role=\"alert\">\n        A simple dark alert—check it out!\n      </div>\n    </div>\n  );","metadata":{"loc":{"lines":{"from":1,"to":28}}}}],["2",{"pageContent":"State.init({\n    img: props.img || \"https://mdbcdn.b-cdn.net/img/new/avatars/2.webp\",\n  });\n  \nreturn (\n    <img\n      src={state.img}\n      class=\"rounded-circle\"\n      style={{ width: \"150px\" }}\n      alt=\"Avatar\"\n    />\n);","metadata":{"loc":{"lines":{"from":1,"to":12}}}}],["3",{"pageContent":"const onClick = () => {};\n\nreturn (\n  <button\n    onClick={onClick}\n    type=\"button\"\n    class=\"btn btn-primary position-relative\"\n  >\n    Inbox\n    <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\n      99+\n      <span class=\"visually-hidden\">unread messages</span>\n    </span>\n  </button>\n);","metadata":{"loc":{"lines":{"from":1,"to":15}}}}],["4",{"pageContent":"return (\n    <div class=\"navbar fixed-bottom navbar-dark bg-primary\">\n      <a class=\"navbar-brand\" href=\"#\">\n        Fixed bottom\n      </a>\n    </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":7}}}}],["5",{"pageContent":"return (\n    <div aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\">\n          <a href=\"#\">Home</a>\n        </li>\n        <li class=\"breadcrumb-item\">\n          <a href=\"#\">Library</a>\n        </li>\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">\n          Data\n        </li>\n      </ol>\n    </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":15}}}}],["6",{"pageContent":"const onClick = () => {};\nreturn (\n  <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Left\n    </button>\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Middle\n    </button>\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Right\n    </button>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":14}}}}],["7",{"pageContent":"const Button = styled.button`\n  border: 0 !important;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  width: 2.5em;\n  height: 2.5em;\n  &:hover {\n    color: DeepSkyBlue;\n    background: rgba(0, 191, 255, 0.1);\n  }\n`;\n\nreturn (\n  <div className=\"d-inline-flex align-items-center\">\n    <Button\n      disabled={!context.accountId}\n      className=\"btn me-1\"\n      title={\"Comment\"}\n      onClick={props.onClick}\n    >\n      <i className={`bi fs-4 bi-chat`} />\n    </Button>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":26}}}}],["8",{"pageContent":"const activeAccountId = context.accountId;\nconst onClick = () => {\n  const gas = 300000000000000;\n  const deposit = 10000000000000000000000;\n  Near.call([\n    {\n      contractName: \"nft_delegate.joychi.testnet\",\n      methodName: \"nft_mint\",\n      args: {\n        token_id: \"1\",\n        metadata: {\n          title: \"Dragon black\",\n          description: \"Dragon power\",\n          media:\n            \"https://ipfs.io/ipfs/bafkreie6g22yhzlvdpeovkedlkhemjs6qxxqw5rpua67yj3tjww73r6fui\",\n          issued_at: Date.now(),\n        },\n        receiver_id: activeAccountId,\n      },\n      gas: gas,\n      deposit: deposit,\n    },\n  ]);\n};\nreturn (\n  <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n    Mint NFT\n  </button>\n);","metadata":{"loc":{"lines":{"from":1,"to":29}}}}],["9",{"pageContent":"State.init({\n    count: 0,\n  });\n  const onClick = () => {\n    State.count + 1;\n  };\n  return (\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Count\n    </button>\n);","metadata":{"loc":{"lines":{"from":1,"to":11}}}}],["10",{"pageContent":"State.init({\n  background:\n    props.background ||\n    \"https://wallpapers.com/images/featured/anime-4k-background-m1fnxjihqd7ot7lo.jpg\",\n});\nreturn (\n  <div class=\"card\" style={{ width: \"18rem\" }}>\n    <img src={state.background} class=\"card-img-top\" alt=\"background\" />\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Card title</h5>\n      <p class=\"card-text\">\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </p>\n      <a href=\"#\" class=\"btn btn-primary\">\n        Go somewhere\n      </a>\n    </div>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":20}}}}],["11",{"pageContent":"State.init({\n    img1:\n      props.image1 ||\n      \"https://i.pinimg.com/originals/43/af/d0/43afd01dc42127c352f1fde070cc2be0.jpg\",\n    img2:\n      props.image2 ||\n      \"https://images.hdqwalls.com/wallpapers/anime-girl-sitting-on-the-top-and-watching-the-city-site-b9.jpg\",\n    img3:\n      props.image3 ||\n      \"https://lh4.googleusercontent.com/proxy/DxP7M5u1VqDpK-UhG_FsNALF-_vtjvNGfMRHoVqioHGLNhRl9dD0GwaQXXVrwF_dcYvelvL8G3yUN0N58WY2y2_RoUl8U_Fh1sPefCmg5iv6F53D1BoJdhVBGyQokDu1qTFsDwsCPg\",\n});\nreturn (\n    <div id=\"carouselExample\" class=\"carousel slide\">\n      <div class=\"carousel-inner\">\n        <div class=\"carousel-item active\">\n          <img src={state.img1} class=\"d-block w-100\" alt=\"background\" />\n        </div>\n        <div class=\"carousel-item\">\n          <img src={state.img2} class=\"d-block w-100\" alt=\"background\" />\n        </div>\n        <div class=\"carousel-item\">\n          <img src={state.img3} class=\"d-block w-100\" alt=\"background\" />\n        </div>\n      </div>\n      <button\n        class=\"carousel-control-prev\"\n        type=\"button\"\n        data-bs-target=\"#carouselExample\"\n        data-bs-slide=\"prev\"\n      >\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n        <span class=\"visually-hidden\">Previous</span>\n      </button>\n      <button\n        class=\"carousel-control-next\"\n        type=\"button\"\n        data-bs-target=\"#carouselExample\"\n        data-bs-slide=\"next\"\n      >\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span class=\"visually-hidden\">Next</span>\n      </button>\n    </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":44}}}}],["12",{"pageContent":"State.init({\n    value: \"\",\n    });\n    const onChange = (e) => {\n    State.update({\n        value: e.target.value,\n    });\n    };\n    const Container = styled.div`\n    #chat1 .form-outline .form-control~.form-notch div {\n    pointer-events: none;\n    border: 1px solid;\n    border-color: #eee;\n    box-sizing: border-box;\n    background: transparent;\n    }\n\n    #chat1 .form-outline .form-control~.form-notch .form-notch-leading {\n    left: 0;\n    top: 0;\n    height: 100%;\n    border-right: none;\n    border-radius: .65rem 0 0 .65rem;\n    }\n\n    #chat1 .form-outline .form-control~.form-notch .form-notch-middle {\n    flex: 0 0 auto;\n    max-width: calc(100% - 1rem);\n    height: 100%;\n    border-right: none;\n    border-left: none;\n    }\n\n    #chat1 .form-outline .form-control~.form-notch .form-notch-trailing {\n    flex-grow: 1;\n    height: 100%;\n    border-left: none;\n    border-radius: 0 .65rem .65rem 0;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-notch .form-notch-leading {\n    border-top: 0.125rem solid #39c0ed;\n    border-bottom: 0.125rem solid #39c0ed;\n    border-left: 0.125rem solid #39c0ed;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-notch .form-notch-leading,\n    #chat1 .form-outline .form-control.active~.form-notch .form-notch-leading {\n    border-right: none;\n    transition: all 0.2s linear;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-notch .form-notch-middle {\n    border-bottom: 0.125rem solid;\n    border-color: #39c0ed;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-notch .form-notch-middle,\n    #chat1 .form-outline .form-control.active~.form-notch .form-notch-middle {\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    transition: all 0.2s linear;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-notch .form-notch-trailing {\n    border-top: 0.125rem solid #39c0ed;\n    border-bottom: 0.125rem solid #39c0ed;\n    border-right: 0.125rem solid #39c0ed;\n    }","metadata":{"loc":{"lines":{"from":1,"to":70}}}}],["13",{"pageContent":"#chat1 .form-outline .form-control:focus~.form-notch .form-notch-trailing,\n    #chat1 .form-outline .form-control.active~.form-notch .form-notch-trailing {\n    border-left: none;\n    transition: all 0.2s linear;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-label {\n    color: #39c0ed;\n    }","metadata":{"loc":{"lines":{"from":72,"to":80}}}}],["14",{"pageContent":"#chat1 .form-outline .form-control:focus~.form-label {\n    color: #39c0ed;\n    }\n\n    #chat1 .form-outline .form-control~.form-label {\n    color: #bfbfbf;\n    }\n    `;\n    return (\n    <Container style={{ background: \"#eee\" }}>\n        <div class=\"container py-2\">\n        <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-md-8 col-lg-6 col-xl-4\">\n            <div class=\"card\" id=\"chat1\" style={{ borderRadius: \"15px\" }}>\n                <div\n                class=\"card-header d-flex justify-content-between align-items-center p-3 bg-info text-white border-bottom-0\"\n                styled={{\n                    borderTopLeftRadius: \"15px\",\n                    borderTopRighRadius: \"15px\",\n                }}\n                >\n                <i class=\"fas fa-angle-left\"></i>\n                <p class=\"mb-0 fw-bold\">Live chat</p>\n                <i class=\"fas fa-times\"></i>\n                </div>\n                <div class=\"card-body\">\n                <div class=\"d-flex flex-row justify-content-start mb-4\">\n                    <img\n                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp\"\n                    alt=\"avatar 1\"\n                    style={{ width: \"45px\", height: \"100%\" }}\n                    />\n                    <div\n                    class=\"p-3 ms-3\"\n                    style={{\n                        borderRadius: \"15px\",\n                        background: \"rgba(57, 192, 237,.2)\",\n                    }}\n                    >\n                    <p class=\"small mb-0\">\n                        Hello and thank you for visiting MDBootstrap. Please click\n                        the video below.\n                    </p>\n                    </div>\n                </div>","metadata":{"loc":{"lines":{"from":78,"to":122}}}}],["15",{"pageContent":"<div class=\"d-flex flex-row justify-content-end mb-4\">\n                    <div\n                    class=\"p-3 me-3 border\"\n                    style={{ borderRadius: \"15px\", background: \"#fbfbfb\" }}\n                    >\n                    <p class=\"small mb-0\">\n                        Thank you, I really like your product.\n                    </p>\n                    </div>\n                    <img\n                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava2-bg.webp\"\n                    alt=\"avatar 1\"\n                    style={{ width: \"45px\", height: \"100%\" }}\n                    />\n                </div>\n\n                <div class=\"d-flex flex-row justify-content-start mb-4\">\n                    <img\n                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp\"\n                    alt=\"avatar 1\"\n                    style={{ width: \"45px\", height: \"100%\" }}\n                    />\n                    <div class=\"ms-3\" style={{ borderRadius: \"15px\" }}>\n                    <div class=\"bg-image\">\n                        <img\n                        src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/screenshot1.webp\"\n                        style={{ borderRadius: \"15px\" }}\n                        alt=\"video\"\n                        />\n                        <a href=\"#!\">\n                        <div class=\"mask\"></div>\n                        </a>\n                    </div>\n                    </div>\n                </div>","metadata":{"loc":{"lines":{"from":124,"to":158}}}}],["16",{"pageContent":"<div class=\"d-flex flex-row justify-content-start mb-4\">\n                    <img\n                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp\"\n                    alt=\"avatar 1\"\n                    style={{ width: \"45px\", height: \"100%\" }}\n                    />\n                    <div\n                    class=\"p-3 ms-3\"\n                    style={{\n                        borderRadius: \"15px\",\n                        background: \"rgba(57, 192, 237,.2)\",\n                    }}\n                    >\n                    <p class=\"small mb-0\">...</p>\n                    </div>\n                </div>\n\n                <div data-mdb-input-init class=\"form-outline\">\n                    <textarea\n                    class=\"form-control\"\n                    id=\"textAreaExample\"\n                    rows=\"4\"\n                    onChange={onChange}\n                    value={state.value}\n                    ></textarea>\n                    <label class=\"form-label\" for=\"textAreaExample\">\n                    Type your message\n                    </label>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n        </div>\n    </Container>\n    );","metadata":{"loc":{"lines":{"from":160,"to":195}}}}],["17",{"pageContent":"State.init({\n  email: \"\",\n  pass: \"\",\n  isCheck: false,\n});\nconst emailChange = (e) => {\n  State.update({\n    email: e.target.value,\n  });\n};\nconst passChange = (e) => {\n  State.update({\n    pass: e.target.value,\n  });\n};\nconst isCheck = () => {\n  State.update({\n    isCheck: !isCheck,\n  });\n};\nreturn (\n  <div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\">\n        Email address\n      </label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        id=\"exampleInputEmail1\"\n        aria-describedby=\"emailHelp\"\n        onChange={emailChange}\n        value={state.email}\n      />\n      <div id=\"emailHelp\" class=\"form-text\">\n        We'll never share your email with anyone else.\n      </div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">\n        Password\n      </label>\n      <input\n        type=\"password\"\n        onChange={passChange}\n        value={state.pass}\n        class=\"form-control\"\n        id=\"exampleInputPassword1\"\n      />\n    </div>\n    <div class=\"mb-3 form-check\">\n      <input\n        onChange={isCheck}\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        id=\"exampleCheck1\"\n      />\n      <label class=\"form-check-label\" for=\"exampleCheck1\">\n        Check me out\n      </label>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">\n      Submit\n    </button>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":66}}}}],["18",{"pageContent":"return (\n  <div class=\"row\">\n    <div class=\"col-lg-4 col-md-12 mb-4 mb-lg-0\">\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Horizontal/Nature/4-col/img%20(73).webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Boat on Calm Water\"\n      />\n\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Vertical/mountain1.webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Wintry Mountain Landscape\"\n      />\n    </div>\n\n    <div class=\"col-lg-4 mb-4 mb-lg-0\">\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Vertical/mountain2.webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Mountains in the Clouds\"\n      />\n\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Horizontal/Nature/4-col/img%20(73).webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Boat on Calm Water\"\n      />\n    </div>\n\n    <div class=\"col-lg-4 mb-4 mb-lg-0\">\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Horizontal/Nature/4-col/img%20(18).webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Waves at Sea\"\n      />\n\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Vertical/mountain3.webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Yosemite National Park\"\n      />\n    </div>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":45}}}}],["19",{"pageContent":"const allRegistrations = Near.view(\n  \"lists.potlock.near\",\n  \"get_registrations_for_list\",\n  {\n    list_id: 1,\n  }\n);\nconst projects = useMemo(() => {\n  if (!isRegistryAdmin) {\n    return allRegistrations.filter(\n      (registration) => registration.status === \"Approved\"\n    );\n  }\n  allRegistrations.sort((a, b) => b.submitted_ms - a.submitted_ms);\n  return allRegistrations;\n}, allRegistrations);\nconst featuredProjectIds = [\n  \"magicbuild.near\",\n  \"potlock.near\",\n  \"yearofchef.near\",\n  \"publicgoodspodcast.near\",\n  \"near-india.near\",\n  \"onboarddao.sputnik-dao.near\",\n];\nconst featuredProjects = useMemo(\n  () =>\n    projects.filter((project) =>\n      featuredProjectIds.includes(project.registrant_id)\n    ),\n  projects\n);\n\nreturn (\n  <div class=\"row\">\n    <div class=\"col-lg-4 col-md-12 mb-4 mb-lg-0\">\n      {featuredProjects.map((dt, key) => {\n        const data = Social.getr(`${dt.registrant_id}/profile`);\n        console.log(data.backgroundImage.ipfs_cid);\n        return (\n          <img\n            src={`https://ipfs.near.social/ipfs/${data.backgroundImage.ipfs_cid}`}\n            class=\"w-100 shadow-1-strong rounded mb-4\"\n            alt=\"Boat on Calm Water\"\n          />\n        );\n      })}\n    </div>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":49}}}}],["20",{"pageContent":"const url_ipfs = \"https://ipfs.near.social/ipfs\";\nState.init({\n  image1: `${url_ipfs}/bafybeifiokiandwndlllcuhmop6b73jjfyv3dyemirhsb5gfairkfostne`,\n  image2: `${url_ipfs}/bafybeicaxmzwvs7gkavzhdzrnh46wbyelanbe2ta5jn6fnsemo2wxn6com`,\n  image3: `${url_ipfs}/bafybeieubru2l2dndprxr6xbgc455bhxycfo5uimrg7xhnc6lxunmfyvoq`,\n  image4: `${url_ipfs}/bafkreiawagh7spkq334jdjbmyonbty3o7i2omeriw5gkeo25gaytnp7k2i`,\n  image5: `${url_ipfs}/bafkreiehyd7jeyvnd2fdivz7s5dxw3dtslcimbxpsqkrjizsoxejyrt474`,\n  image6: `${url_ipfs}/bafkreibxfndju3h4jdfmwzytv44vbj6xsqczsisorfu7t6wyq726ata7zi`,\n});\n\nreturn (\n  <div class=\"row\">\n    <div class=\"col-lg-4 col-md-12 mb-4 mb-lg-0\">\n      <img\n        src={state.image1}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Boat on Calm Water\"\n      />\n\n      <img\n        src={state.image2}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Wintry Mountain Landscape\"\n      />\n    </div>\n\n    <div class=\"col-lg-4 mb-4 mb-lg-0\">\n      <img\n        src={state.image3}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Mountains in the Clouds\"\n      />\n\n      <img\n        src={state.image4}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Boat on Calm Water\"\n      />\n    </div>\n\n    <div class=\"col-lg-4 mb-4 mb-lg-0\">\n      <img\n        src={state.image5}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Waves at Sea\"\n      />\n\n      <img\n        src={state.image6}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Yosemite National Park\"\n      />\n    </div>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":55}}}}],["21",{"pageContent":"State.init({ value: \"\" });\nconst onChange = (e) => {\n  State.update({ value: e.target.value });\n};\nreturn (\n  <input\n    type=\"text\"\n    onChange={onChange}\n    value={state.value}\n    class=\"form-control\"\n    placeholder=\"Enter text\"\n    aria-label=\"text\"\n  />\n);","metadata":{"loc":{"lines":{"from":1,"to":14}}}}],["22",{"pageContent":"return (\n    <div class=\"jumbotron\">\n      <h1 class=\"display-4\">Hello, world!</h1>\n      <p class=\"lead\">\n        This is a simple hero unit, a simple jumbotron-style component for calling\n        extra attention to featured content or information.\n      </p>\n      <hr class=\"my-4\" />\n      <p>\n        It uses utility classes for typography and spacing to space content out\n        within the larger container.\n      </p>\n      <p class=\"lead\">\n        <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\n          Learn more\n        </a>\n      </p>\n    </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":19}}}}],["23",{"pageContent":"return (\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">An item</li>\n      <li class=\"list-group-item\">A second item</li>\n      <li class=\"list-group-item\">A third item</li>\n      <li class=\"list-group-item\">A fourth item</li>\n      <li class=\"list-group-item\">And a fifth one</li>\n    </ul>\n  );","metadata":{"loc":{"lines":{"from":1,"to":9}}}}],["24",{"pageContent":"const Menu = styled.div`\n    \n.navbar .megamenu{ padding: 1rem; }\n\n@media all and (min-width: 992px) {\n\n  .navbar .has-megamenu{position:static!important;}\n  .navbar .megamenu{left:0; right:0; width:100%; margin-top:0;  }\n\n}\t\n\n@media(max-width: 991px){\n  .navbar.fixed-top .navbar-collapse, .navbar.sticky-top .navbar-collapse{\n    overflow-y: auto;\n      max-height: 90vh;\n      margin-top:10px;\n  }\n}\n`;","metadata":{"loc":{"lines":{"from":1,"to":19}}}}],["25",{"pageContent":"return (\n  <Menu class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n    <div class=\"container-fluid\">\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-bs-toggle=\"collapse\"\n        data-bs-target=\"#main_nav\"\n      >\n        <span>Mega Menu</span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"main_nav\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item active\">\n            {\" \"}\n            <a class=\"nav-link\" href=\"#\">\n              Home{\" \"}\n            </a>{\" \"}\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              {\" \"}\n              About{\" \"}\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              {\" \"}\n              Services{\" \"}\n            </a>\n          </li>\n          <li class=\"nav-item dropdown has-megamenu\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              data-bs-toggle=\"dropdown\"\n            >\n              {\" \"}\n              Mega menu{\" \"}\n            </a>\n            <div class=\"dropdown-menu megamenu\" role=\"menu\">\n              This is content of megamenu. <br />\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat.\n            </div>\n          </li>\n        </ul>\n        <ul class=\"navbar-nav ms-auto\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              {\" \"}\n              Menu item{\" \"}\n            </a>\n          </li>\n          <li class=\"nav-item dropdown\">\n            <a\n              class=\"nav-link  dropdown-toggle\"\n              href=\"#\"\n              data-bs-toggle=\"dropdown\"\n            >\n              {\" \"}\n              Dropdown right{\" \"}","metadata":{"loc":{"lines":{"from":21,"to":84}}}}],["26",{"pageContent":"<a\n              class=\"nav-link  dropdown-toggle\"\n              href=\"#\"\n              data-bs-toggle=\"dropdown\"\n            >\n              {\" \"}\n              Dropdown right{\" \"}\n            </a>\n            <ul class=\"dropdown-menu dropdown-menu-end\">\n              <li>\n                <a class=\"dropdown-item\" href=\"#\">\n                  {\" \"}\n                  Submenu item 1\n                </a>\n              </li>\n              <li>\n                <a class=\"dropdown-item\" href=\"#\">\n                  {\" \"}\n                  Submenu item 2{\" \"}\n                </a>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </Menu>\n);","metadata":{"loc":{"lines":{"from":78,"to":105}}}}],["27",{"pageContent":"return (\n    <>\n      <div\n        class=\"modal fade\"\n        id=\"exampleModal\"\n        tabindex=\"-1\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">\n                Modal title\n              </h1>\n              <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div class=\"modal-body\">...</div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button type=\"button\" class=\"btn btn-primary\">\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );","metadata":{"loc":{"lines":{"from":1,"to":40}}}}],["28",{"pageContent":"return (\n  <div aria-label=\"Page navigation example\">\n    <ul class=\"pagination\">\n      <li class=\"page-item\">\n        <a class=\"page-link\" href=\"#\">\n          Previous\n        </a>\n      </li>\n      <li class=\"page-item active\">\n        <a class=\"page-link\" href=\"#\">\n          1\n        </a>\n      </li>\n      <li class=\"page-item\">\n        <a class=\"page-link\" href=\"#\">\n          2\n        </a>\n      </li>\n      <li class=\"page-item\">\n        <a class=\"page-link\" href=\"#\">\n          3\n        </a>\n      </li>\n      <li class=\"page-item\">\n        <a class=\"page-link\" href=\"#\">\n          Next\n        </a>\n      </li>\n    </ul>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":31}}}}],["29",{"pageContent":"State.init({\n  progress: props.progress || \"50%\",\n});\nreturn (\n  <>\n    <div\n      class=\"progress mt-2\"\n      role=\"progressbar\"\n      aria-label=\"Basic example\"\n      aria-valuenow=\"0\"\n      aria-valuemin=\"0\"\n      aria-valuemax=\"100\"\n    >\n      <div class=\"progress-bar\" style={{ width: state.progress }}></div>\n    </div>\n  </>\n);","metadata":{"loc":{"lines":{"from":1,"to":17}}}}],["30",{"pageContent":"return (\n  <div id=\"rating1\" class=\"star-rating\" role=\"rating\" data-rating=\"3\">\n    <span class=\"star\" data-value=\"1\">\n      &#9733;\n    </span>\n    <span class=\"star\" data-value=\"2\">\n      &#9733;\n    </span>\n    <span class=\"star\" data-value=\"3\">\n      &#9733;\n    </span>\n    <span class=\"star\" data-value=\"4\">\n      &#9733;\n    </span>\n    <span class=\"star\" data-value=\"5\">\n      &#9733;\n    </span>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":19}}}}],["31",{"pageContent":"const style = {\n    padding: \"1rem 2rem\",\n    borderRadius: \"8px\",\n    backgroundColor: \"#e74c3c\",\n    color: \"#fff\",\n    fontSize: \"1.2rem\",\n    border: \"none\",\n    cursor: \"pointer\"\n  };\n  \n  return (\n    <>\n      <button style={style}>Click Me!</button>\n    </>\n  );","metadata":{"loc":{"lines":{"from":1,"to":15}}}}],["32",{"pageContent":"const onClick = () => { };\nretun(<button onClick={onClick} type=\"button\" class=\"btn btn-primary\" >Click Me</button>)","metadata":{"loc":{"lines":{"from":1,"to":2}}}}],["33",{"pageContent":"const contract = \"hello.near-examples.near\";\nconst greeting = Near.view(contract, \"get_greeting\", {});\n\n// intergrati\nconst greetingForm = (\n  <>\n    <div className=\"border border-black p-3\">\n      <label>Update greeting</label>\n      <input placeholder=\"Howdy\" onChange={onInputChange} />\n      <button className=\"btn btn-primary mt-2\" onClick={onBtnClick}>\n        Save\n      </button>\n    </div>\n  </>\n);\n\nconst notLoggedInWarning = <p> Login to change the greeting </p>;\n\n// Render\nreturn (\n  <>\n    <div className=\"container border border-info p-3\">\n      <h3 className=\"text-center\">\n        The contract says:\n        <span className=\"text-decoration-underline\"> {greeting} </span>\n      </h3>\n\n      <p className=\"text-center py-2\">\n        Look at that! A greeting stored on the NEAR blockchain.\n      </p>\n\n      {context.accountId ? greetingForm : notLoggedInWarning}\n    </div>\n  </>\n);","metadata":{"loc":{"lines":{"from":1,"to":35}}}}],["34",{"pageContent":"return (\n  <img\n    src=\"https://ipfs.io/ipfs/QmabYudwPtdSy1JnvnVMfuiu9pNfGnxMhN2obbPmSDx65Z/0187.png\"\n    class=\"\"\n    alt=\"mint.yearofchef.near\"\n  />\n);","metadata":{"loc":{"lines":{"from":1,"to":7}}}}],["35",{"pageContent":"State.init({\n  img: null,\n});\nreturn (\n  <div className='container row'>\n    <div>\n      Image upload: <br />\n      <IpfsImageUpload image={state.img} />\n    </div>\n    <div>\n      Raw State:\n      <pre>{JSON.stringify(state)}</pre>\n    </div>\n    <div className='mt-2'>\n      {state.img.cid && (\n        <img\n          src={`https://ipfs.near.social/ipfs/${state.img.cid}`}\n          alt='uploaded'\n        />\n      )}\n    </div>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":23}}}}],["36",{"pageContent":"// Show balance Near\nconst res = fetch(`https://api.nearblocks.io/v1/account/${props.wallet_id || context.accountId}`);\n\nif (!(res && res.body)) return \"...\";\n\nconst native_balance = res.body.account[0].amount / 1e24;\nconst unspendable_balance = 0.05 + res.body.account[0].storage_usage / 1e5;\nconst spendable_balance = native_balance - unspendable_balance;\n\nconst balance =\n  props.balance_type === \"spendable\" ? spendable_balance : native_balance;\n\nreturn balance.toFixed(props.decimal_places ?? 2);","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["37",{"pageContent":"const [a, setA] = useState(() => {\n    console.log(\"Init 'a'\");\n    return \"Y\";\n  });\n  \n  const [b, setB] = useState(\"B\");\n  const [sum, setSum] = useState(0);\n  \n  useEffect(() => {\n    setSum(a.length + b.length);\n    return () => {\n      console.log(\"cleanup\");\n    };\n  }, [a, b]);\n  \n  return (\n    <div>\n      A = {a}\n      <br />B = {b}\n      <br />\n      Length sum = {sum}\n      <div>\n        <button onClick={() => setA((s) => s + \"O\")}>A</button>\n        <button onClick={() => setB(b + \"O\")}>B</button>\n      </div>\n    </div>\n  );","metadata":{"loc":{"lines":{"from":1,"to":27}}}}],["38",{"pageContent":"//check nft suplly \nconst contractID = \"og-sbt.i-am-human.near\"; // for nft contract\n\nState.init({\n  contract: contractID,\n});\nconst onChangeContract = (contract) => {\n  State.update({\n    contract,\n  });\n};\nconst humans = Near.view(state.contract, \"nft_total_supply\"); // checks total minted // total non expired supply\n\nreturn (\n  <div>\n    <div>\n      <h1>Number of NFTs: {humans}</h1>\n    </div>\n    <div className=\"row\">\n      <div className=\" col-lg-12 mb-2\">\n        Contract ID: (Checks NFT Supply)\n        <input\n          type=\"text\"\n          placeholder={state.contract}\n          onChange={(e) => onChangeContract(e.target.value)}\n        />\n      </div>\n    </div>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":30}}}}],["39",{"pageContent":"// An examle func conpoment\nfunction Magic(props) {\n    return <div>Magic: {props.children}</div>;\n}\n\nreturn <Magic>Hello World</Magic>;","metadata":{"loc":{"lines":{"from":1,"to":6}}}}],["40",{"pageContent":"let accountId = context.accountId;\n/**\n * Mint NFT Form\n */\nif (!accountId) {\n    return \"Please sign in with NEAR wallet\";\n}\nlet cid =\n    props.cid ?? \"bafkreibmc23xhip63mxv2mulb7xko5htpiqszrch4fo3optszuctjtlrau\";\nlet image = props.image;\nconst mintButton = props.mintButton ?? \"Mint\";\nconst showDetails = props.showDetails ?? true;\nconst title = props.title ?? \"Example title\";\nconst receiver = props.receiver ?? \"ogruss.near\";\n\nif (image) {\n    cid = image.cid;\n    console.log(\"Image CID: \" + cid);\n}\n\nlet description = props.description ?? \"Proof of Vibes powered by GenaDrop\";\nconst profile = socialGetr(`${accountId}/profile`);\n\nif (profile === null) {\n    IpfsImageUpload();\n    return \"Loading\";\n}\nState.init({\n    cid: cid,\n    description: description,\n    title: title,\n    image: image,\n    receiver: receiver,\n    //   image: \"\",\n});","metadata":{"loc":{"lines":{"from":1,"to":35}}}}],["41",{"pageContent":"const handleMint = () => {\n    if (!state.image.cid) {\n        return;\n    }\n    if (!accountId) {\n        console.log(\"Please login\"); // add share dogvwallet\n        State.update({\n            showAlert: true,\n            toastMessage: \"Please log in before continuing\",\n        });\n        setTimeout(() => {\n            State.update({\n                showAlert: false,\n            });\n        }, 3000);\n    } else if (!state.title) {\n        console.log(\"Please Enter title\");\n        State.update({\n            showAlert: true,\n            toastMessage: \"Please enter a title for the NFT\",\n        });","metadata":{"loc":{"lines":{"from":37,"to":57}}}}],["42",{"pageContent":"setTimeout(() => {\n            State.update({\n                showAlert: false,\n            });\n        }, 3000);\n    } else if (!state.description) {\n        State.update({\n            showAlert: true,\n            toastMessage: \"Please enter a description for the NFT\",\n        });\n        setTimeout(() => {\n            State.update({\n                showAlert: false,\n            });\n        }, 3000);\n    } else {\n        const metadata = {\n            name: state.title,\n            description: state.description,\n            properties: [],\n            image: `ipfs://${state.image.cid}`,\n        };\n        console.log(\"come\", metadata);\n        asyncFetch(\"https://ipfs.near.social/add\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n            },\n            body: metadata,\n        }).then((res) => {\n            console.log(\"GO ON SOUN\", res);\n            const cid = res.body.cid;\n            const gas = 200000000000000;\n            const deposit = 10000000000000000000000;\n            console.log(\"State Image CID: \" + state.image.cid);\n            console.log(\"Reference CID: \" + cid);\n            Near.call([\n                {\n                    contractName: \"nft.genadrop.near\",\n                    methodName: \"nft_mint\",\n                    args: {\n                        token_id: `${Date.now()}`,\n                        metadata: {\n                            title: state.title,\n                            description: state.description,\n                            media: `https://ipfs.io/ipfs/${state.image.cid}`,\n                            reference: `ipfs://${cid}`,\n                        },\n                        receiver_id: state.receiver,\n                    },\n                    gas: gas,\n                    deposit: deposit,\n                },\n            ]);\n        });\n    }\n};\n\ninitState({\n    title: \"\",\n    description: \"\",\n    showAlert: false,\n    toastMessage: \"\",\n});","metadata":{"loc":{"lines":{"from":59,"to":122}}}}],["43",{"pageContent":"const onChangeTitle = (title) => {\n    State.update({\n        title,\n    });\n};\nconst onChangeReceiver = (receiver) => {\n    State.update({\n        receiver,\n    });\n};\n\nconst onChangeDesc = (description) => {\n    State.update({\n        description,\n    });\n};\n\nif (!accountId) {\n    console.log(\"Please login\");\n    State.update({\n        showAlert: true,\n        toastMessage: \"Please log in before continuing\",\n    });\n}\n\nconst ImageUploadCard = styled.div`\ndisplay:flex;\nflex-flow: column nowrap;\nalign-items: center;\n  width:80%;\n  border: 2px dashed #0d99ff;\n  border-radius: 1rem;\n  box-shadow: 4px 4px 20px 6px rgba(0,0,0,.2);\n  margin:30px auto;\n  padding:1.5rem;\n  text-align: center;\n`;\nconst Main = styled.div`\nposition:relative;\n  font-family: \"SF Pro Display\",sans-serif;\n`;\n\nconst Heading = styled.p`\n  margin: 10px auto 10px auto;\n  font-size: 1em;\n  color:#0f1d40;\n  width:60%;\n  text-align: center;\n  font-family: \"SF Pro Display\",sans-serif;\n`;\n\nconst Toast = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-conten: center;\n  bottom: 60px;\n  right: 20px;\n  background-color: red;\n  color: #fff;\n  padding: 16px;\n  border-radius: 8px;\n  z-index: 100;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  line-height:1;\n`;\n\nconst Elipse = styled.div`\nbackground-color:#eff3f9;\nheight: 100px;\nwidth: 100px;\nborder-radius: 50%;\n`;\n\nconst Text = styled.p`\nfont-size: .9rem;\ncolor: #525c76;\nline-height:1.rem;\nmargin: 3px;\n`;\n\nconst Card = styled.div`\npadding: 1em;\nborder: 1px solid #e5e8eb;\ngap: 2em;\nmargin: 10px auto;\nborder-radius: .7em;\n`;\n\nconst ImageCard = styled.div`\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  height:fit-content;\n  max-height:500px;\n  width: 90%;\n  max-width: 500px;\n  border-radius: 1rem;\n  &>img{\n  object-fit: contain;\n  }\n`;","metadata":{"loc":{"lines":{"from":124,"to":224}}}}],["44",{"pageContent":"const Input = styled.input`\n  display: block;\n  padding:.5em;\n  width:100%;\n  border: 1px solid #e5e8eb;\n  border-radius: 10px;\n  outline: none;\n  background: #f4f5f6;\n  color: #525c76;\n  :focus{\n    border:1px solid #0d99ff;\n  }\n  ::placeholder {\n    color: palevioletred;\n  }\n`;","metadata":{"loc":{"lines":{"from":226,"to":241}}}}],["45",{"pageContent":"const TextArea = styled.textarea`\n  display: block;\n  padding:.5em;\n  width:100%;\n  border: 1px solid #e5e8eb;\n  border-radius: 10px;\n  outline: none;\n  background: #f4f5f6;\n  color: #525c76;\n  :focus{\n    border:1px solid #0d99ff;\n  }\n`;","metadata":{"loc":{"lines":{"from":243,"to":255}}}}],["46",{"pageContent":"return (\n    <Main className=\"container-fluid\">\n        <div>\n            <Card className=\"d-flex flex-column align-items-center\">\n                {!!state.image.cid ?? (\n                    <ImageCard>\n                        <img\n                            src={`https://ipfs.io/ipfs/` + state.image.cid}\n                            alt=\"uploaded image\"\n                            width=\"100%\"\n                            height=\"100%\"\n                            className=\"rounded-3\"\n                        />\n                    </ImageCard>\n                )}\n                <div>\n                    <IpfsImageUpload\n                        image={state.image}\n                        className=\"btn btn-outline-primary border-0 rounded-3\"\n                    />\n                </div>\n            </Card>\n            {showDetails && (\n                <Card>\n                    <h5>NFT Details</h5>\n                    <Card>\n                        Title:\n                        <Input\n                            type=\"text\"\n                            onChange={(e) => onChangeTitle(e.target.value)}\n                            placeholder={state.title}\n                        />\n                    </Card>\n                    <Card>\n                        Description:\n                        <TextArea\n                            type=\"text\"\n                            onChange={(e) => onChangeDesc(e.target.value)}\n                            placeholder={state.description}\n                        />\n                    </Card>\n                    <Card>\n                        Receiver:\n                        <Input\n                            type=\"text\"\n                            onChange={(e) => onChangeReceiver(e.target.value)}\n                            placeholder={state.receiver}\n                        />\n                    </Card>\n                </Card>\n            )}\n            <div className=\"d-flex justify-content-center mb-2\">","metadata":{"loc":{"lines":{"from":257,"to":308}}}}],["47",{"pageContent":"/>\n                    </Card>\n                </Card>\n            )}\n            <div className=\"d-flex justify-content-center mb-2\">\n                <button type=\"button\" className=\"btn btn-primary\" onClick={handleMint}>\n                    {mintButton}\n                </button>\n            </div>\n        </div>\n    </Main>\n)","metadata":{"loc":{"lines":{"from":304,"to":315}}}}],["48",{"pageContent":"// Stake Form\ninitState({ amount: \"1\", poolId: \"zavodil.poolv1.near\" });\n\nconst onStakeClick = () => {\n  const gas = 300 * 1000000000000;\n  // TODO: doesn't support floats right now due to limitation of JS integers\n  const deposit = parseInt(state.amount) + \"000000000000000000000000\";\n  console.log(gas, deposit);\n  Near.call(state.poolId, \"deposit_and_stake\", {}, gas, deposit);\n};\n\nreturn (\n  <div>\n    <h1>Stake NEAR</h1>\n    <p>\n      Pool: <input value={state.poolId} />\n    </p>\n    <p>\n      Amount: <input type=\"number\" value={state.amount} />\n    </p>\n    <a onClick={onStakeClick}>Stake</a>\n  </div>\n);","metadata":{"loc":{"lines":{"from":1,"to":23}}}}],["49",{"pageContent":"// upload ipfs and store Data to socialDB\nState.init({\n    loading: false,\n  });\n  \n  const ipfsUrl = (cid) => `https://ipfs.near.social/ipfs/${cid}`;\n  \n  const filesOnChange = (files) => {\n    if (files?.length > 0) {\n      State.update({\n        loading: true,\n      });\n      const body = files[0];\n      asyncFetch(\"https://ipfs.near.social/add\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n        },\n        body,\n      })\n        .then((res) => {\n          const content = {\n            type: \"md\",\n            image: { ipfs_cid: res.body.cid },\n          };\n          const data = {\n            post: {\n              main: JSON.stringify(content),\n            },\n            index: {\n              post: JSON.stringify([\n                {\n                  key: \"insta\",\n                  value: {\n                    type: \"md\",\n                  },\n                },\n                {\n                  key: \"main\",\n                  value: {\n                    type: \"md\",\n                  },\n                },\n              ]),\n            },\n          };\n          State.update({\n            uploaded: true,\n          });\n          Social.set(data, {\n            force: true,\n            onCommit: () => {\n              setTimeout(() => {\n                State.update({\n                  uploaded: false,\n                });\n              }, 3500);\n            },\n          });\n        })\n        .finally(() => {\n          State.update({\n            loading: false,\n          });\n        });\n    } else {\n      State.update({\n        img: null,\n      });\n    }\n  };\n  \n  const Wrapper = styled.div`\n    @media (min-width: 576px) {\n      max-width: 288px;\n    }\n    background: RGBA(248,249,250);\n    \n    > div {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  \n    &:hover {\n      background: RGBA(230, 230, 230);\n    }\n  \n    transition: background 0.5s;\n  `;\n  \n  const loader = (\n    <span","metadata":{"loc":{"lines":{"from":1,"to":93}}}}],["50",{"pageContent":"justify-content: center;\n      align-items: center;\n    }\n  \n    &:hover {\n      background: RGBA(230, 230, 230);\n    }\n  \n    transition: background 0.5s;\n  `;\n  \n  const loader = (\n    <span\n      className=\"spinner-grow spinner-grow-sm me-1\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    />\n  );\n  \n  return (\n    <Wrapper className=\"ratio ratio-1x1\">\n      <Files\n        multiple={false}\n        accepts={[\"image/*\"]}\n        minFileSize={1}\n        clickable\n        onChange={filesOnChange}\n        className=\"btn\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"80%\"\n          height=\"80%\"\n          viewBox=\"0 0 16 16\"\n          className=\"position-absolute top-50 start-50 translate-middle\"\n          style={{ opacity: 0.05 }}\n        >\n          <path d=\"M10.5 8.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z\" />\n          <path d=\"M2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828A2 2 0 0 1 3.172 4H2zm.5 2a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm9 2.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0z\" />\n        </svg>\n        {state.uploaded ? (\n          <div>\n            {loader}\n            Posting\n          </div>\n        ) : state.loading ? (\n          <div>{loader} Uploading</div>\n        ) : (\n          <div>Upload a photo</div>\n        )}\n      </Files>\n    </Wrapper>\n  );","metadata":{"loc":{"lines":{"from":81,"to":133}}}}]]