[
  {
    "fileName": "Accordion.js",
    "content": "State.init(\n    {\n        content:props.content||\"It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the though the transition does limit overflow.\",\n        title:props.title||\"Accordion Item #1\"\n    }\n);\n\nreturn (\n    <div class=\"accordion\" id=\"accordionExample\">\n      <div class=\"accordion-item\">\n        <h2 class=\"accordion-header\" id=\"headingOne\">\n          <button\n            class=\"accordion-button\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#collapseOne\"\n            aria-expanded=\"true\"\n            aria-controls=\"collapseOne\"\n          >\n            {state.title}\n          </button>\n        </h2>\n        <div\n          id=\"collapseOne\"\n          class=\"accordion-collapse collapse show\"\n          aria-labelledby=\"headingOne\"\n          data-bs-parent=\"#accordionExample\"\n        >\n          <div class=\"accordion-body\">\n            {state.content}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  "
  },
  {
    "fileName": "Alerts.js",
    "content": "return (\n    <div>\n      <div class=\"alert alert-primary\" role=\"alert\">\n        A simple primary alert—check it out!\n      </div>\n      <div class=\"alert alert-secondary\" role=\"alert\">\n        A simple secondary alert—check it out!\n      </div>\n      <div class=\"alert alert-success\" role=\"alert\">\n        A simple success alert—check it out!\n      </div>\n      <div class=\"alert alert-danger\" role=\"alert\">\n        A simple danger alert—check it out!\n      </div>\n      <div class=\"alert alert-warning\" role=\"alert\">\n        A simple warning alert—check it out!\n      </div>\n      <div class=\"alert alert-info\" role=\"alert\">\n        A simple info alert—check it out!\n      </div>\n      <div class=\"alert alert-light\" role=\"alert\">\n        A simple light alert—check it out!\n      </div>\n      <div class=\"alert alert-dark\" role=\"alert\">\n        A simple dark alert—check it out!\n      </div>\n    </div>\n  );\n  "
  },
  {
    "fileName": "Avatar.js",
    "content": "State.init({\n    img: props.img || \"https://mdbcdn.b-cdn.net/img/new/avatars/2.webp\",\n  });\n  \nreturn (\n    <img\n      src={state.img}\n      class=\"rounded-circle\"\n      style={{ width: \"150px\" }}\n      alt=\"Avatar\"\n    />\n);"
  },
  {
    "fileName": "Badge.js",
    "content": "const onClick = () => {};\n\nreturn (\n  <button\n    onClick={onClick}\n    type=\"button\"\n    class=\"btn btn-primary position-relative\"\n  >\n    Inbox\n    <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\n      99+\n      <span class=\"visually-hidden\">unread messages</span>\n    </span>\n  </button>\n);\n"
  },
  {
    "fileName": "BottomNavigation.js",
    "content": "return (\n    <div class=\"navbar fixed-bottom navbar-dark bg-primary\">\n      <a class=\"navbar-brand\" href=\"#\">\n        Fixed bottom\n      </a>\n    </div>\n);"
  },
  {
    "fileName": "Breadcrumb.js",
    "content": "return (\n    <div aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\">\n          <a href=\"#\">Home</a>\n        </li>\n        <li class=\"breadcrumb-item\">\n          <a href=\"#\">Library</a>\n        </li>\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">\n          Data\n        </li>\n      </ol>\n    </div>\n);  "
  },
  {
    "fileName": "ButtonGroup.js",
    "content": "const onClick = () => {};\nreturn (\n  <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Left\n    </button>\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Middle\n    </button>\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Right\n    </button>\n  </div>\n);\n"
  },
  {
    "fileName": "ButtonWithIcon.js",
    "content": "const Button = styled.button`\n  border: 0 !important;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  width: 2.5em;\n  height: 2.5em;\n  &:hover {\n    color: DeepSkyBlue;\n    background: rgba(0, 191, 255, 0.1);\n  }\n`;\n\nreturn (\n  <div className=\"d-inline-flex align-items-center\">\n    <Button\n      disabled={!context.accountId}\n      className=\"btn me-1\"\n      title={\"Comment\"}\n      onClick={props.onClick}\n    >\n      <i className={`bi fs-4 bi-chat`} />\n    </Button>\n  </div>\n);"
  },
  {
    "fileName": "ButtonWithNearCall.js",
    "content": "const activeAccountId = context.accountId;\nconst onClick = () => {\n  const gas = 300000000000000;\n  const deposit = 10000000000000000000000;\n  Near.call([\n    {\n      contractName: \"nft_delegate.joychi.testnet\",\n      methodName: \"nft_mint\",\n      args: {\n        token_id: \"1\",\n        metadata: {\n          title: \"Dragon black\",\n          description: \"Dragon power\",\n          media:\n            \"https://ipfs.io/ipfs/bafkreie6g22yhzlvdpeovkedlkhemjs6qxxqw5rpua67yj3tjww73r6fui\",\n          issued_at: Date.now(),\n        },\n        receiver_id: activeAccountId,\n      },\n      gas: gas,\n      deposit: deposit,\n    },\n  ]);\n};\nreturn (\n  <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n    Mint NFT\n  </button>\n);\n"
  },
  {
    "fileName": "ButtonWithNearState.js",
    "content": "State.init({\n    count: 0,\n  });\n  const onClick = () => {\n    State.count + 1;\n  };\n  return (\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Count\n    </button>\n);  "
  },
  {
    "fileName": "Card.js",
    "content": "State.init({\n  background:\n    props.background ||\n    \"https://wallpapers.com/images/featured/anime-4k-background-m1fnxjihqd7ot7lo.jpg\",\n});\nreturn (\n  <div class=\"card\" style={{ width: \"18rem\" }}>\n    <img src={state.background} class=\"card-img-top\" alt=\"background\" />\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Card title</h5>\n      <p class=\"card-text\">\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </p>\n      <a href=\"#\" class=\"btn btn-primary\">\n        Go somewhere\n      </a>\n    </div>\n  </div>\n);  "
  },
  {
    "fileName": "Carousel.js",
    "content": "State.init({\n    img1:\n      props.image1 ||\n      \"https://i.pinimg.com/originals/43/af/d0/43afd01dc42127c352f1fde070cc2be0.jpg\",\n    img2:\n      props.image2 ||\n      \"https://images.hdqwalls.com/wallpapers/anime-girl-sitting-on-the-top-and-watching-the-city-site-b9.jpg\",\n    img3:\n      props.image3 ||\n      \"https://lh4.googleusercontent.com/proxy/DxP7M5u1VqDpK-UhG_FsNALF-_vtjvNGfMRHoVqioHGLNhRl9dD0GwaQXXVrwF_dcYvelvL8G3yUN0N58WY2y2_RoUl8U_Fh1sPefCmg5iv6F53D1BoJdhVBGyQokDu1qTFsDwsCPg\",\n});\nreturn (\n    <div id=\"carouselExample\" class=\"carousel slide\">\n      <div class=\"carousel-inner\">\n        <div class=\"carousel-item active\">\n          <img src={state.img1} class=\"d-block w-100\" alt=\"background\" />\n        </div>\n        <div class=\"carousel-item\">\n          <img src={state.img2} class=\"d-block w-100\" alt=\"background\" />\n        </div>\n        <div class=\"carousel-item\">\n          <img src={state.img3} class=\"d-block w-100\" alt=\"background\" />\n        </div>\n      </div>\n      <button\n        class=\"carousel-control-prev\"\n        type=\"button\"\n        data-bs-target=\"#carouselExample\"\n        data-bs-slide=\"prev\"\n      >\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n        <span class=\"visually-hidden\">Previous</span>\n      </button>\n      <button\n        class=\"carousel-control-next\"\n        type=\"button\"\n        data-bs-target=\"#carouselExample\"\n        data-bs-slide=\"next\"\n      >\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span class=\"visually-hidden\">Next</span>\n      </button>\n    </div>\n);"
  },
  {
    "fileName": "ChatBubble.js",
    "content": "    State.init({\n    value: \"\",\n    });\n    const onChange = (e) => {\n    State.update({\n        value: e.target.value,\n    });\n    };\n    const Container = styled.div`\n    #chat1 .form-outline .form-control~.form-notch div {\n    pointer-events: none;\n    border: 1px solid;\n    border-color: #eee;\n    box-sizing: border-box;\n    background: transparent;\n    }\n\n    #chat1 .form-outline .form-control~.form-notch .form-notch-leading {\n    left: 0;\n    top: 0;\n    height: 100%;\n    border-right: none;\n    border-radius: .65rem 0 0 .65rem;\n    }\n\n    #chat1 .form-outline .form-control~.form-notch .form-notch-middle {\n    flex: 0 0 auto;\n    max-width: calc(100% - 1rem);\n    height: 100%;\n    border-right: none;\n    border-left: none;\n    }\n\n    #chat1 .form-outline .form-control~.form-notch .form-notch-trailing {\n    flex-grow: 1;\n    height: 100%;\n    border-left: none;\n    border-radius: 0 .65rem .65rem 0;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-notch .form-notch-leading {\n    border-top: 0.125rem solid #39c0ed;\n    border-bottom: 0.125rem solid #39c0ed;\n    border-left: 0.125rem solid #39c0ed;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-notch .form-notch-leading,\n    #chat1 .form-outline .form-control.active~.form-notch .form-notch-leading {\n    border-right: none;\n    transition: all 0.2s linear;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-notch .form-notch-middle {\n    border-bottom: 0.125rem solid;\n    border-color: #39c0ed;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-notch .form-notch-middle,\n    #chat1 .form-outline .form-control.active~.form-notch .form-notch-middle {\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    transition: all 0.2s linear;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-notch .form-notch-trailing {\n    border-top: 0.125rem solid #39c0ed;\n    border-bottom: 0.125rem solid #39c0ed;\n    border-right: 0.125rem solid #39c0ed;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-notch .form-notch-trailing,\n    #chat1 .form-outline .form-control.active~.form-notch .form-notch-trailing {\n    border-left: none;\n    transition: all 0.2s linear;\n    }\n\n    #chat1 .form-outline .form-control:focus~.form-label {\n    color: #39c0ed;\n    }\n\n    #chat1 .form-outline .form-control~.form-label {\n    color: #bfbfbf;\n    }\n    `;\n    return (\n    <Container style={{ background: \"#eee\" }}>\n        <div class=\"container py-2\">\n        <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-md-8 col-lg-6 col-xl-4\">\n            <div class=\"card\" id=\"chat1\" style={{ borderRadius: \"15px\" }}>\n                <div\n                class=\"card-header d-flex justify-content-between align-items-center p-3 bg-info text-white border-bottom-0\"\n                styled={{\n                    borderTopLeftRadius: \"15px\",\n                    borderTopRighRadius: \"15px\",\n                }}\n                >\n                <i class=\"fas fa-angle-left\"></i>\n                <p class=\"mb-0 fw-bold\">Live chat</p>\n                <i class=\"fas fa-times\"></i>\n                </div>\n                <div class=\"card-body\">\n                <div class=\"d-flex flex-row justify-content-start mb-4\">\n                    <img\n                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp\"\n                    alt=\"avatar 1\"\n                    style={{ width: \"45px\", height: \"100%\" }}\n                    />\n                    <div\n                    class=\"p-3 ms-3\"\n                    style={{\n                        borderRadius: \"15px\",\n                        background: \"rgba(57, 192, 237,.2)\",\n                    }}\n                    >\n                    <p class=\"small mb-0\">\n                        Hello and thank you for visiting MDBootstrap. Please click\n                        the video below.\n                    </p>\n                    </div>\n                </div>\n\n                <div class=\"d-flex flex-row justify-content-end mb-4\">\n                    <div\n                    class=\"p-3 me-3 border\"\n                    style={{ borderRadius: \"15px\", background: \"#fbfbfb\" }}\n                    >\n                    <p class=\"small mb-0\">\n                        Thank you, I really like your product.\n                    </p>\n                    </div>\n                    <img\n                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava2-bg.webp\"\n                    alt=\"avatar 1\"\n                    style={{ width: \"45px\", height: \"100%\" }}\n                    />\n                </div>\n\n                <div class=\"d-flex flex-row justify-content-start mb-4\">\n                    <img\n                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp\"\n                    alt=\"avatar 1\"\n                    style={{ width: \"45px\", height: \"100%\" }}\n                    />\n                    <div class=\"ms-3\" style={{ borderRadius: \"15px\" }}>\n                    <div class=\"bg-image\">\n                        <img\n                        src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/screenshot1.webp\"\n                        style={{ borderRadius: \"15px\" }}\n                        alt=\"video\"\n                        />\n                        <a href=\"#!\">\n                        <div class=\"mask\"></div>\n                        </a>\n                    </div>\n                    </div>\n                </div>\n\n                <div class=\"d-flex flex-row justify-content-start mb-4\">\n                    <img\n                    src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp\"\n                    alt=\"avatar 1\"\n                    style={{ width: \"45px\", height: \"100%\" }}\n                    />\n                    <div\n                    class=\"p-3 ms-3\"\n                    style={{\n                        borderRadius: \"15px\",\n                        background: \"rgba(57, 192, 237,.2)\",\n                    }}\n                    >\n                    <p class=\"small mb-0\">...</p>\n                    </div>\n                </div>\n\n                <div data-mdb-input-init class=\"form-outline\">\n                    <textarea\n                    class=\"form-control\"\n                    id=\"textAreaExample\"\n                    rows=\"4\"\n                    onChange={onChange}\n                    value={state.value}\n                    ></textarea>\n                    <label class=\"form-label\" for=\"textAreaExample\">\n                    Type your message\n                    </label>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n        </div>\n    </Container>\n    );  "
  },
  {
    "fileName": "Forms.js",
    "content": "State.init({\n  email: \"\",\n  pass: \"\",\n  isCheck: false,\n});\nconst emailChange = (e) => {\n  State.update({\n    email: e.target.value,\n  });\n};\nconst passChange = (e) => {\n  State.update({\n    pass: e.target.value,\n  });\n};\nconst isCheck = () => {\n  State.update({\n    isCheck: !isCheck,\n  });\n};\nreturn (\n  <div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\">\n        Email address\n      </label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        id=\"exampleInputEmail1\"\n        aria-describedby=\"emailHelp\"\n        onChange={emailChange}\n        value={state.email}\n      />\n      <div id=\"emailHelp\" class=\"form-text\">\n        We'll never share your email with anyone else.\n      </div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">\n        Password\n      </label>\n      <input\n        type=\"password\"\n        onChange={passChange}\n        value={state.pass}\n        class=\"form-control\"\n        id=\"exampleInputPassword1\"\n      />\n    </div>\n    <div class=\"mb-3 form-check\">\n      <input\n        onChange={isCheck}\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        id=\"exampleCheck1\"\n      />\n      <label class=\"form-check-label\" for=\"exampleCheck1\">\n        Check me out\n      </label>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">\n      Submit\n    </button>\n  </div>\n);  "
  },
  {
    "fileName": "Gallery.js",
    "content": "return (\n  <div class=\"row\">\n    <div class=\"col-lg-4 col-md-12 mb-4 mb-lg-0\">\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Horizontal/Nature/4-col/img%20(73).webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Boat on Calm Water\"\n      />\n\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Vertical/mountain1.webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Wintry Mountain Landscape\"\n      />\n    </div>\n\n    <div class=\"col-lg-4 mb-4 mb-lg-0\">\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Vertical/mountain2.webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Mountains in the Clouds\"\n      />\n\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Horizontal/Nature/4-col/img%20(73).webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Boat on Calm Water\"\n      />\n    </div>\n\n    <div class=\"col-lg-4 mb-4 mb-lg-0\">\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Horizontal/Nature/4-col/img%20(18).webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Waves at Sea\"\n      />\n\n      <img\n        src=\"https://mdbcdn.b-cdn.net/img/Photos/Vertical/mountain3.webp\"\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Yosemite National Park\"\n      />\n    </div>\n  </div>\n);\n"
  },
  {
    "fileName": "GalleryWithNearView.js",
    "content": "const allRegistrations = Near.view(\n  \"lists.potlock.near\",\n  \"get_registrations_for_list\",\n  {\n    list_id: 1,\n  }\n);\nconst projects = useMemo(() => {\n  if (!isRegistryAdmin) {\n    return allRegistrations.filter(\n      (registration) => registration.status === \"Approved\"\n    );\n  }\n  allRegistrations.sort((a, b) => b.submitted_ms - a.submitted_ms);\n  return allRegistrations;\n}, allRegistrations);\nconst featuredProjectIds = [\n  \"magicbuild.near\",\n  \"potlock.near\",\n  \"yearofchef.near\",\n  \"publicgoodspodcast.near\",\n  \"near-india.near\",\n  \"onboarddao.sputnik-dao.near\",\n];\nconst featuredProjects = useMemo(\n  () =>\n    projects.filter((project) =>\n      featuredProjectIds.includes(project.registrant_id)\n    ),\n  projects\n);\n\nreturn (\n  <div class=\"row\">\n    <div class=\"col-lg-4 col-md-12 mb-4 mb-lg-0\">\n      {featuredProjects.map((dt, key) => {\n        const data = Social.getr(`${dt.registrant_id}/profile`);\n        console.log(data.backgroundImage.ipfs_cid);\n        return (\n          <img\n            src={`https://ipfs.near.social/ipfs/${data.backgroundImage.ipfs_cid}`}\n            class=\"w-100 shadow-1-strong rounded mb-4\"\n            alt=\"Boat on Calm Water\"\n          />\n        );\n      })}\n    </div>\n  </div>\n);  "
  },
  {
    "fileName": "GalleryWithState.js",
    "content": "const url_ipfs = \"https://ipfs.near.social/ipfs\";\nState.init({\n  image1: `${url_ipfs}/bafybeifiokiandwndlllcuhmop6b73jjfyv3dyemirhsb5gfairkfostne`,\n  image2: `${url_ipfs}/bafybeicaxmzwvs7gkavzhdzrnh46wbyelanbe2ta5jn6fnsemo2wxn6com`,\n  image3: `${url_ipfs}/bafybeieubru2l2dndprxr6xbgc455bhxycfo5uimrg7xhnc6lxunmfyvoq`,\n  image4: `${url_ipfs}/bafkreiawagh7spkq334jdjbmyonbty3o7i2omeriw5gkeo25gaytnp7k2i`,\n  image5: `${url_ipfs}/bafkreiehyd7jeyvnd2fdivz7s5dxw3dtslcimbxpsqkrjizsoxejyrt474`,\n  image6: `${url_ipfs}/bafkreibxfndju3h4jdfmwzytv44vbj6xsqczsisorfu7t6wyq726ata7zi`,\n});\n\nreturn (\n  <div class=\"row\">\n    <div class=\"col-lg-4 col-md-12 mb-4 mb-lg-0\">\n      <img\n        src={state.image1}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Boat on Calm Water\"\n      />\n\n      <img\n        src={state.image2}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Wintry Mountain Landscape\"\n      />\n    </div>\n\n    <div class=\"col-lg-4 mb-4 mb-lg-0\">\n      <img\n        src={state.image3}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Mountains in the Clouds\"\n      />\n\n      <img\n        src={state.image4}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Boat on Calm Water\"\n      />\n    </div>\n\n    <div class=\"col-lg-4 mb-4 mb-lg-0\">\n      <img\n        src={state.image5}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Waves at Sea\"\n      />\n\n      <img\n        src={state.image6}\n        class=\"w-100 shadow-1-strong rounded mb-4\"\n        alt=\"Yosemite National Park\"\n      />\n    </div>\n  </div>\n);\n"
  },
  {
    "fileName": "Input.js",
    "content": "State.init({ value: \"\" });\nconst onChange = (e) => {\n  State.update({ value: e.target.value });\n};\nreturn (\n  <input\n    type=\"text\"\n    onChange={onChange}\n    value={state.value}\n    class=\"form-control\"\n    placeholder=\"Enter text\"\n    aria-label=\"text\"\n  />\n);\n"
  },
  {
    "fileName": "Jumbotron.js",
    "content": "return (\n    <div class=\"jumbotron\">\n      <h1 class=\"display-4\">Hello, world!</h1>\n      <p class=\"lead\">\n        This is a simple hero unit, a simple jumbotron-style component for calling\n        extra attention to featured content or information.\n      </p>\n      <hr class=\"my-4\" />\n      <p>\n        It uses utility classes for typography and spacing to space content out\n        within the larger container.\n      </p>\n      <p class=\"lead\">\n        <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\n          Learn more\n        </a>\n      </p>\n    </div>\n);  "
  },
  {
    "fileName": "ListGroups.js",
    "content": "return (\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">An item</li>\n      <li class=\"list-group-item\">A second item</li>\n      <li class=\"list-group-item\">A third item</li>\n      <li class=\"list-group-item\">A fourth item</li>\n      <li class=\"list-group-item\">And a fifth one</li>\n    </ul>\n  );\n  "
  },
  {
    "fileName": "MegaMenu.js",
    "content": "const Menu = styled.div`\n    \n.navbar .megamenu{ padding: 1rem; }\n\n@media all and (min-width: 992px) {\n\n  .navbar .has-megamenu{position:static!important;}\n  .navbar .megamenu{left:0; right:0; width:100%; margin-top:0;  }\n\n}\t\n\n@media(max-width: 991px){\n  .navbar.fixed-top .navbar-collapse, .navbar.sticky-top .navbar-collapse{\n    overflow-y: auto;\n      max-height: 90vh;\n      margin-top:10px;\n  }\n}\n`;\n\nreturn (\n  <Menu class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n    <div class=\"container-fluid\">\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-bs-toggle=\"collapse\"\n        data-bs-target=\"#main_nav\"\n      >\n        <span>Mega Menu</span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"main_nav\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item active\">\n            {\" \"}\n            <a class=\"nav-link\" href=\"#\">\n              Home{\" \"}\n            </a>{\" \"}\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              {\" \"}\n              About{\" \"}\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              {\" \"}\n              Services{\" \"}\n            </a>\n          </li>\n          <li class=\"nav-item dropdown has-megamenu\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              data-bs-toggle=\"dropdown\"\n            >\n              {\" \"}\n              Mega menu{\" \"}\n            </a>\n            <div class=\"dropdown-menu megamenu\" role=\"menu\">\n              This is content of megamenu. <br />\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat.\n            </div>\n          </li>\n        </ul>\n        <ul class=\"navbar-nav ms-auto\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              {\" \"}\n              Menu item{\" \"}\n            </a>\n          </li>\n          <li class=\"nav-item dropdown\">\n            <a\n              class=\"nav-link  dropdown-toggle\"\n              href=\"#\"\n              data-bs-toggle=\"dropdown\"\n            >\n              {\" \"}\n              Dropdown right{\" \"}\n            </a>\n            <ul class=\"dropdown-menu dropdown-menu-end\">\n              <li>\n                <a class=\"dropdown-item\" href=\"#\">\n                  {\" \"}\n                  Submenu item 1\n                </a>\n              </li>\n              <li>\n                <a class=\"dropdown-item\" href=\"#\">\n                  {\" \"}\n                  Submenu item 2{\" \"}\n                </a>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </Menu>\n);\n"
  },
  {
    "fileName": "Modal.js",
    "content": "return (\n    <>\n      <div\n        class=\"modal fade\"\n        id=\"exampleModal\"\n        tabindex=\"-1\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">\n                Modal title\n              </h1>\n              <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div class=\"modal-body\">...</div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button type=\"button\" class=\"btn btn-primary\">\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n  "
  },
  {
    "fileName": "Pagination.js",
    "content": "return (\n  <div aria-label=\"Page navigation example\">\n    <ul class=\"pagination\">\n      <li class=\"page-item\">\n        <a class=\"page-link\" href=\"#\">\n          Previous\n        </a>\n      </li>\n      <li class=\"page-item active\">\n        <a class=\"page-link\" href=\"#\">\n          1\n        </a>\n      </li>\n      <li class=\"page-item\">\n        <a class=\"page-link\" href=\"#\">\n          2\n        </a>\n      </li>\n      <li class=\"page-item\">\n        <a class=\"page-link\" href=\"#\">\n          3\n        </a>\n      </li>\n      <li class=\"page-item\">\n        <a class=\"page-link\" href=\"#\">\n          Next\n        </a>\n      </li>\n    </ul>\n  </div>\n);\n"
  },
  {
    "fileName": "Progress.js",
    "content": "State.init({\n  progress: props.progress || \"50%\",\n});\nreturn (\n  <>\n    <div\n      class=\"progress mt-2\"\n      role=\"progressbar\"\n      aria-label=\"Basic example\"\n      aria-valuenow=\"0\"\n      aria-valuemin=\"0\"\n      aria-valuemax=\"100\"\n    >\n      <div class=\"progress-bar\" style={{ width: state.progress }}></div>\n    </div>\n  </>\n);  "
  },
  {
    "fileName": "StarRating.js",
    "content": "return (\n  <div id=\"rating1\" class=\"star-rating\" role=\"rating\" data-rating=\"3\">\n    <span class=\"star\" data-value=\"1\">\n      &#9733;\n    </span>\n    <span class=\"star\" data-value=\"2\">\n      &#9733;\n    </span>\n    <span class=\"star\" data-value=\"3\">\n      &#9733;\n    </span>\n    <span class=\"star\" data-value=\"4\">\n      &#9733;\n    </span>\n    <span class=\"star\" data-value=\"5\">\n      &#9733;\n    </span>\n  </div>\n);  "
  },
  {
    "fileName": "button-style.js",
    "content": "const style = {\n    padding: \"1rem 2rem\",\n    borderRadius: \"8px\",\n    backgroundColor: \"#e74c3c\",\n    color: \"#fff\",\n    fontSize: \"1.2rem\",\n    border: \"none\",\n    cursor: \"pointer\"\n  };\n  \n  return (\n    <>\n      <button style={style}>Click Me!</button>\n    </>\n  );"
  },
  {
    "fileName": "button.js",
    "content": "const onClick = () => { };\nretun(<button onClick={onClick} type=\"button\" class=\"btn btn-primary\" >Click Me</button>)\n"
  },
  {
    "fileName": "contract.js",
    "content": "const contract = \"hello.near-examples.near\";\nconst greeting = Near.view(contract, \"get_greeting\", {});\n\n// intergrati\nconst greetingForm = (\n  <>\n    <div className=\"border border-black p-3\">\n      <label>Update greeting</label>\n      <input placeholder=\"Howdy\" onChange={onInputChange} />\n      <button className=\"btn btn-primary mt-2\" onClick={onBtnClick}>\n        Save\n      </button>\n    </div>\n  </>\n);\n\nconst notLoggedInWarning = <p> Login to change the greeting </p>;\n\n// Render\nreturn (\n  <>\n    <div className=\"container border border-info p-3\">\n      <h3 className=\"text-center\">\n        The contract says:\n        <span className=\"text-decoration-underline\"> {greeting} </span>\n      </h3>\n\n      <p className=\"text-center py-2\">\n        Look at that! A greeting stored on the NEAR blockchain.\n      </p>\n\n      {context.accountId ? greetingForm : notLoggedInWarning}\n    </div>\n  </>\n);"
  },
  {
    "fileName": "nft.js",
    "content": "return (\n  <img\n    src=\"https://ipfs.io/ipfs/QmabYudwPtdSy1JnvnVMfuiu9pNfGnxMhN2obbPmSDx65Z/0187.png\"\n    class=\"\"\n    alt=\"mint.yearofchef.near\"\n  />\n);\n"
  },
  {
    "fileName": "uploadIpfs.js",
    "content": "State.init({\n  img: null,\n});\nreturn (\n  <div className='container row'>\n    <div>\n      Image upload: <br />\n      <IpfsImageUpload image={state.img} />\n    </div>\n    <div>\n      Raw State:\n      <pre>{JSON.stringify(state)}</pre>\n    </div>\n    <div className='mt-2'>\n      {state.img.cid && (\n        <img\n          src={`https://ipfs.near.social/ipfs/${state.img.cid}`}\n          alt='uploaded'\n        />\n      )}\n    </div>\n  </div>\n);"
  },
  {
    "fileName": "balance-with-near-block.js",
    "content": "// Show balance Near\nconst res = fetch(`https://api.nearblocks.io/v1/account/${props.wallet_id || context.accountId}`);\n\nif (!(res && res.body)) return \"...\";\n\nconst native_balance = res.body.account[0].amount / 1e24;\nconst unspendable_balance = 0.05 + res.body.account[0].storage_usage / 1e5;\nconst spendable_balance = native_balance - unspendable_balance;\n\nconst balance =\n  props.balance_type === \"spendable\" ? spendable_balance : native_balance;\n\nreturn <span>{balance.toFixed(props.decimal_places ?? 2)}</span>"
  },
  {
    "fileName": "calculate-two-numbers.js",
    "content": "const [a, setA] = useState(() => {\n    console.log(\"Init 'a'\");\n    return \"Y\";\n  });\n  \n  const [b, setB] = useState(\"B\");\n  const [sum, setSum] = useState(0);\n  \n  useEffect(() => {\n    setSum(a.length + b.length);\n    return () => {\n      console.log(\"cleanup\");\n    };\n  }, [a, b]);\n  \n  return (\n    <div>\n      A = {a}\n      <br />B = {b}\n      <br />\n      Length sum = {sum}\n      <div>\n        <button onClick={() => setA((s) => s + \"O\")}>A</button>\n        <button onClick={() => setB(b + \"O\")}>B</button>\n      </div>\n    </div>\n  );\n  "
  },
  {
    "fileName": "check-nft-suplly.js",
    "content": "//check nft suplly \nconst contractID = \"og-sbt.i-am-human.near\"; // for nft contract\n\nState.init({\n  contract: contractID,\n});\nconst onChangeContract = (contract) => {\n  State.update({\n    contract,\n  });\n};\nconst humans = Near.view(state.contract, \"nft_total_supply\"); // checks total minted // total non expired supply\n\nreturn (\n  <div>\n    <div>\n      <h1>Number of NFTs: {humans}</h1>\n    </div>\n    <div className=\"row\">\n      <div className=\" col-lg-12 mb-2\">\n        Contract ID: (Checks NFT Supply)\n        <input\n          type=\"text\"\n          placeholder={state.contract}\n          onChange={(e) => onChangeContract(e.target.value)}\n        />\n      </div>\n    </div>\n  </div>\n);"
  },
  {
    "fileName": "func-copoment.js",
    "content": "// function conpoment\nfunction Magic(props) {\n    return <div>Magic: {props.children}</div>;\n}\n\nreturn <Magic>Hello World</Magic>;"
  },
  {
    "fileName": "mint-nft-form.js",
    "content": "let accountId = context.accountId;\n/**\n * Mint NFT Form\n */\nif (!accountId) {\n    return \"Please sign in with NEAR wallet\";\n}\nlet cid =\n    props.cid ?? \"bafkreibmc23xhip63mxv2mulb7xko5htpiqszrch4fo3optszuctjtlrau\";\nlet image = props.image;\nconst mintButton = props.mintButton ?? \"Mint\";\nconst showDetails = props.showDetails ?? true;\nconst title = props.title ?? \"Example title\";\nconst receiver = props.receiver ?? \"ogruss.near\";\n\nif (image) {\n    cid = image.cid;\n    console.log(\"Image CID: \" + cid);\n}\n\nlet description = props.description ?? \"Proof of Vibes powered by GenaDrop\";\nconst profile = socialGetr(`${accountId}/profile`);\n\nif (profile === null) {\n    IpfsImageUpload();\n    return \"Loading\";\n}\nState.init({\n    cid: cid,\n    description: description,\n    title: title,\n    image: image,\n    receiver: receiver,\n    //   image: \"\",\n});\n\nconst handleMint = () => {\n    if (!state.image.cid) {\n        return;\n    }\n    if (!accountId) {\n        console.log(\"Please login\"); // add share dogvwallet\n        State.update({\n            showAlert: true,\n            toastMessage: \"Please log in before continuing\",\n        });\n        setTimeout(() => {\n            State.update({\n                showAlert: false,\n            });\n        }, 3000);\n    } else if (!state.title) {\n        console.log(\"Please Enter title\");\n        State.update({\n            showAlert: true,\n            toastMessage: \"Please enter a title for the NFT\",\n        });\n\n        setTimeout(() => {\n            State.update({\n                showAlert: false,\n            });\n        }, 3000);\n    } else if (!state.description) {\n        State.update({\n            showAlert: true,\n            toastMessage: \"Please enter a description for the NFT\",\n        });\n        setTimeout(() => {\n            State.update({\n                showAlert: false,\n            });\n        }, 3000);\n    } else {\n        const metadata = {\n            name: state.title,\n            description: state.description,\n            properties: [],\n            image: `ipfs://${state.image.cid}`,\n        };\n        console.log(\"come\", metadata);\n        asyncFetch(\"https://ipfs.near.social/add\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n            },\n            body: metadata,\n        }).then((res) => {\n            console.log(\"GO ON SOUN\", res);\n            const cid = res.body.cid;\n            const gas = 200000000000000;\n            const deposit = 10000000000000000000000;\n            console.log(\"State Image CID: \" + state.image.cid);\n            console.log(\"Reference CID: \" + cid);\n            Near.call([\n                {\n                    contractName: \"nft.genadrop.near\",\n                    methodName: \"nft_mint\",\n                    args: {\n                        token_id: `${Date.now()}`,\n                        metadata: {\n                            title: state.title,\n                            description: state.description,\n                            media: `https://ipfs.io/ipfs/${state.image.cid}`,\n                            reference: `ipfs://${cid}`,\n                        },\n                        receiver_id: state.receiver,\n                    },\n                    gas: gas,\n                    deposit: deposit,\n                },\n            ]);\n        });\n    }\n};\n\ninitState({\n    title: \"\",\n    description: \"\",\n    showAlert: false,\n    toastMessage: \"\",\n});\n\nconst onChangeTitle = (title) => {\n    State.update({\n        title,\n    });\n};\nconst onChangeReceiver = (receiver) => {\n    State.update({\n        receiver,\n    });\n};\n\nconst onChangeDesc = (description) => {\n    State.update({\n        description,\n    });\n};\n\nif (!accountId) {\n    console.log(\"Please login\");\n    State.update({\n        showAlert: true,\n        toastMessage: \"Please log in before continuing\",\n    });\n}\n\n\n\nreturn (\n    <div className=\"container-fluid\">\n        <div>\n            <div className=\"d-flex flex-column align-items-center\">\n                {!!state.image.cid ?? (\n                    <div>\n                        <img\n                            src={`https://ipfs.io/ipfs/` + state.image.cid}\n                            alt=\"uploaded image\"\n                            width=\"100%\"\n                            height=\"100%\"\n                            className=\"rounded-3\"\n                        />\n                    </div>\n                )}\n                <div>\n                    <IpfsImageUpload\n                        image={state.image}\n                        className=\"btn btn-outline-primary border-0 rounded-3\"\n                    />\n                </div>\n            </div>\n            {showDetails && (\n                <div>\n                    <h5>NFT Details</h5>\n                    <div>\n                        Title:\n                        <input\n                            type=\"text\"\n                            onChange={(e) => onChangeTitle(e.target.value)}\n                            placeholder={state.title}\n                        />\n                    </div>\n                    <div>\n                        Description:\n                        <textarea\n                            type=\"text\"\n                            onChange={(e) => onChangeDesc(e.target.value)}\n                            placeholder={state.description}\n                        />\n                    </div>\n                    <div>\n                        Receiver:\n                        <input\n                            type=\"text\"\n                            onChange={(e) => onChangeReceiver(e.target.value)}\n                            placeholder={state.receiver}\n                        />\n                    </div>\n                </div>\n            )}\n            <div className=\"d-flex justify-content-center mb-2\">\n                <button type=\"button\" className=\"btn btn-primary\" onClick={handleMint}>\n                    {mintButton}\n                </button>\n            </div>\n        </div>\n    </div>\n)"
  },
  {
    "fileName": "stake-demo.js",
    "content": "// Stake Form\ninitState({ amount: \"1\", poolId: \"zavodil.poolv1.near\" });\nconst onStakeClick = () => {\n  const gas = 300 * 1000000000000;\n  const deposit = parseInt(state.amount) + \"000000000000000000000000\";\n  console.log(gas, deposit);\n  Near.call(state.poolId, \"deposit_and_stake\", {}, gas, deposit);\n};\n\nreturn (\n  <div>\n    <h1>Stake NEAR</h1>\n    <p>\n      Pool: <input value={state.poolId} />\n    </p>\n    <p>\n      Amount: <input type=\"number\" value={state.amount} />\n    </p>\n    <a onClick={onStakeClick}>Stake</a>\n  </div>\n);"
  },
  {
    "fileName": "upload-ipfs-and-save-social.js",
    "content": "// upload image to ipfs\nState.init({\n  loading: false,\n});\n\nconst ipfsUrl = (cid) => `https://ipfs.near.social/ipfs/${cid}`;\n\nconst filesOnChange = (files) => {\n  if (files?.length > 0) {\n    State.update({\n      loading: true,\n    });\n    const body = files[0];\n    asyncFetch(\"https://ipfs.near.social/add\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n      },\n      body,\n    })\n      .then((res) => {\n        const content = {\n          type: \"md\",\n          image: { ipfs_cid: res.body.cid },\n        };\n        const data = {\n          post: {\n            main: JSON.stringify(content),\n          },\n          index: {\n            post: JSON.stringify([\n              {\n                key: \"insta\",\n                value: {\n                  type: \"md\",\n                },\n              },\n              {\n                key: \"main\",\n                value: {\n                  type: \"md\",\n                },\n              },\n            ]),\n          },\n        };\n        State.update({\n          uploaded: true,\n        });\n        Social.set(data, {\n          force: true,\n          onCommit: () => {\n            setTimeout(() => {\n              State.update({\n                uploaded: false,\n              });\n            }, 3500);\n          },\n        });\n      })\n      .finally(() => {\n        State.update({\n          loading: false,\n        });\n      });\n  } else {\n    State.update({\n      img: null,\n    });\n  }\n};\n\n\nconst loader = (\n  <span\n    className=\"spinner-grow spinner-grow-sm me-1\"\n    role=\"status\"\n    aria-hidden=\"true\"\n  />\n);\n\nreturn (\n  // FIle conpoment\n  <Files\n    multiple={false}\n    accepts={[\"image/*\"]}\n    minFileSize={1}\n    clickable\n    onChange={filesOnChange}\n    className=\"btn\"\n  >\n    {state.uploaded ? (\n      <div>\n        {loader}\n        Posting\n      </div>\n    ) : state.loading ? (\n      <div>{loader} Uploading</div>\n    ) : (\n      <div>Upload a photo</div>\n    )}\n  </Files>\n);"
  },
  {
    "fileName": "Button.js",
    "content": "const onClick = () => {};\nreturn (\n  <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n    Button\n  </button>\n);\n"
  },
  {
    "fileName": "Button001.js",
    "content": "const Button0001 = styled.button`width: 80%;\n  height: 40px;\n  all: unset;\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding: 0.6em 2em;\n  border: mediumspringgreen solid 0.15em;\n  border-radius: 0.25em;\n  color: mediumspringgreen;\n  font-size: 1.2em;\n  font-weight: 600;\n  cursor: pointer;\n  overflow: hidden;\n  transition: border 300ms, color 300ms;\n  user-select: none;\n\n  p {\n    z-index: 1;\n  }\n\n  &:hover {\n    color: #212121;\n  }\n\n  &:active {\n    border-color: teal;\n  }\n\n  &::before,\n  &::after\n{ content: \"\";position: absolute;\n    width: 9em;\n    aspect-ratio: 1;\n    background: mediumspringgreen;\n    opacity: 50%;\n    border-radius: 50%;\n    transition: transform 500ms, background 300ms;\n  }\n\n  &::before {\n    left: 0;\n    transform: translateX(-8em);\n  }\n\n  &::after {\n    right: 0;\n    transform: translateX(8em);\n  }\n\n  &:hover::before {\n    transform: translateX(-1em);\n  }\n\n  &:hover::after {\n    transform: translateX(1em);\n  }\n\n  &:active::before,\n  &:active::after {\n    background: teal;\n  }`;\nState.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n return(\n    <Button0001 onClick={onClick}>Button 0001</Button0001>\n)"
  },
  {
    "fileName": "Button002.js",
    "content": "const Button0002 = styled.button`\nheight: 3em;\n  width: 8em;\n  border: none;\n  border-radius: 10em;\n  background: #016dd9;\n  font-size: 17px;\n  color: #ffffff;\n  font-family: inherit;\n  font-weight: 500;\n\n  &:hover {\n    animation-name: shakeAnimation;\n    animation-duration: 0.3s;\n    animation-timing-function: linear;\n    animation-iteration-count: infinite;\n    animation-direction: alternate;\n  }\n\n  @keyframes shakeAnimation {\n    0% {\n      transform: translate(0);\n    }\n    20% {\n      transform: translate(-2px, 2px);\n    }\n    40% {\n      transform: translate(-2px, -2px);\n    }\n    60% {\n      transform: translate(2px, 2px);\n    }\n    80% {\n      transform: translate(2px, -2px);\n    }\n    100% {\n      transform: translate(0);\n    }\n  }`;\nconst copyToClipboard = () => { clipboard.writeText(\"Hello World!\") }\n return(\n    <Button0002 onClick={copyToClipboard}>Button 0002</Button0002>\n)"
  },
  {
    "fileName": "Button003.js",
    "content": "const Button0003 = styled.button`\n--btn-default-bg: rgb(41, 41, 41);\n  --btn-padding: 15px 20px;\n  --btn-hover-bg: rgb(51, 51, 51);\n  --btn-transition: 0.3s;\n  --btn-letter-spacing: 0.1rem;\n  --btn-animation-duration: 1.2s;\n  --btn-shadow-color: rgba(0, 0, 0, 0.137);\n  --btn-shadow: 0 2px 10px 0 var(--btn-shadow-color);\n  --hover-btn-color: #FAC921;\n  --default-btn-color: #fff;\n  --font-size: 16px;\n  --font-weight: 600;\n  --font-family: Menlo, Roboto Mono, monospace;\n\n  box-sizing: border-box;\n  padding: var(--btn-padding);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--default-btn-color);\n  font: var(--font-weight) var(--font-size) var(--font-family);\n  background: var(--btn-default-bg);\n  border: none;\n  cursor: pointer;\n  transition: background var(--btn-transition);\n  overflow: hidden;\n  box-shadow: var(--btn-shadow);\n  transform-origin: center;\n  transform: scale(1);\n  transition: transform 0.3s;\n\n  span {\n    letter-spacing: var(--btn-letter-spacing);\n    transition: color var(--btn-transition);\n    box-sizing: border-box;\n    position: relative;\n    background: inherit;\n  }\n\n  &:hover, &:focus {\n    background: var(--btn-hover-bg);\n\n    span {\n      color: var(--hover-btn-color);\n    }\n\n    transform: scale(1.1); /* Bounce effect */\n  }\n}`;\nState.init({\n    value: \"\"\n})\n\nconst getValue = () => {\n    const greeting = Near.view(\"hello.near-examples.testnet\", \"get_greeting\", {});\n\n    if (greeting === null) return \"Loading...\";\n    State.update({value:greeting})\n}\n\nreturn(\n    <Button0003 onClick={getValue}>\n          <span>Button 0003</span>\n    </Button0003>\n)"
  },
  {
    "fileName": "Button004.js",
    "content": "const Button0004 = styled.button`\n--glow-color: rgb(217, 176, 255);\n  --glow-spread-color: rgba(191, 123, 255, 0.781);\n  --enhanced-glow-color: rgb(231, 206, 255);\n  --btn-color: rgb(100, 61, 136);\n  border: 0.25em solid var(--glow-color);\n  padding: 1em 3em;\n  color: var(--glow-color);\n  font-size: 15px;\n  font-weight: bold;\n  background-color: var(--btn-color);\n  border-radius: 1em;\n  outline: none;\n  box-shadow: 0 0 1em 0.25em var(--glow-color),\n    0 0 4em 1em var(--glow-spread-color),\n    inset 0 0 0.75em 0.25em var(--glow-color);\n  text-shadow: 0 0 0.5em var(--glow-color);\n  position: relative;\n  transition: all 0.3s;\n\n  &:after {\n    pointer-events: none;\n    content: \"\";\n    position: absolute;\n    top: 120%;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    background-color: var(--glow-spread-color);\n    filter: blur(2em);\n    opacity: 0.7;\n    transform: perspective(1.5em) rotateX(35deg) scale(1, 0.6);\n  }\n\n  &:hover {\n    color: var(--btn-color);\n    background-color: var(--glow-color);\n    box-shadow: 0 0 1em 0.25em var(--glow-color),\n      0 0 4em 2em var(--glow-spread-color),\n      inset 0 0 0.75em 0.25em var(--glow-color);\n  }\n\n  &:active {\n    box-shadow: 0 0 0.6em 0.25em var(--glow-color),\n      0 0 2.5em 2em var(--glow-spread-color),\n      inset 0 0 0.5em 0.25em var(--glow-color);\n  }`;\nconst onClick = () => {\n  Near.call(\n    \"hello.near-examples.testnet\",\n    \"set_greeting\",\n    { greeting: \"Hello!\" }\n  );\n};\n\nreturn <Button0004 onClick={onClick}>Button 0004</Button0004>;\n"
  },
  {
    "fileName": "Button005.js",
    "content": "const Button0005 = styled.button`\nfont-family: monospace;\n  font-size: 1em;\n  color: #FAFAFA;\n  text-transform: uppercase;\n  padding: 10px 20px;\n  border-radius: 10px;\n  border: 4px solid #FAFAFA;\n  background: #252525;\n  box-shadow: 6px 6px #fafafa;\n  cursor: pointer;\n  margin: 35px 0;\n  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n\n  &:active {\n    box-shadow: none;\n    transform: translate(5px, 5px);\n  }`;\nState.init({\n  data: \"\",\n});\nconst showData = () => {\n  const datas = Near.view(\"inotel.pool.f863973.m0\", \"get_accounts\", {\n    from_index: 0,\n    limit: 5,\n  });\n  State.update({data:datas})\n};\n\nreturn <Button0005>Button 0005</Button0005>;\n"
  },
  {
    "fileName": "Button006.js",
    "content": "const Button0006 = styled.button`\n   border: none;\n  border-radius: 20px;\n  background: linear-gradient(32deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n  transition: all 1.5s ease;\n  font-family: 'Ropa Sans', sans-serif;\n  font-weight: bold;\n  letter-spacing: 0.05rem;\n  padding: 0;\n  cursor: pointer;\n\n  span {\n    display: inline-block;\n    padding: 15px 35px;\n    font-size: 17px;\n    border-radius: 20px;\n    background: rgba(255, 255, 255, 0.0625); /* #ffffff10 with 10% opacity */\n    backdrop-filter: blur(20px);\n    transition: 0.4s ease-in-out;\n    transition-property: color;\n    height: 100%;\n    width: 100%;\n\n    &:hover {\n      backdrop-filter: blur(0px);\n      color: #ffffff;\n    }\n  }`;\nState.init({\n    message:\"\"\n})\nconst handleClick = () => {\n    State.update({\n        message:\"Hello!\"\n    })\n}\n\nreturn(\n        <>\n            <Button0006 onClick={handleClick}>\n                <span>Button 0006</span>\n            </Button0006>\n            {state.message&&<div class=\"alert alert-primary\" role=\"alert\">\n                {state.message}\n            </div>}\n        </>\n)"
  },
  {
    "fileName": "Button007.js",
    "content": "const Button0007 = styled.button`\n  padding: 0.1em 0.25em;\n  width: 13em;\n  height: 4.2em;\n  background-color: #212121;\n  border: 0.08em solid #fff;\n  border-radius: 0.3em;\n  font-size: 12px;\n  cursor: pointer;\n\n  span {\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    bottom: 0.4em;\n    width: 8.25em;\n    height: 2.5em;\n    background-color: #212121;\n    border-radius: 0.2em;\n    font-size: 1.5em;\n    color: #fff;\n    border: 0.08em solid #fff;\n    box-shadow: 0 0.4em 0.1em 0.019em #fff;\n    transition: all 0.5s;\n\n    &:hover {\n      transform: translate(0, 0.4em);\n      box-shadow: 0 0 0 0 #fff;\n      transition: all 0.5s;\n    }\n  }`;\nState.init({\n    count:0\n})\nconst onCount = () => {\n    State.update({\n        count:state.count+1\n    })\n}\n\n return(\n        <Button0007 onClick={onCount}>\n          <span>Count</span>\n        </Button0007>\n)"
  },
  {
    "fileName": "Button008.js",
    "content": "const Button0008 = styled.button`\n  font-size: 16px;\n  position: relative;\n  margin: auto;\n  padding: 1em 2.5em 1em 2.5em;\n  border: none;\n  background: #fff;\n  transition: all 0.1s linear;\n  box-shadow: 0 0.4em 1em rgba(0, 0, 0, 0.1);\n  border-radius:5em;\n  &:active {\n    transform: scale(0.95);\n  }\n\n  span {\n    color: #464646;\n  }\n\n  .border {\n    position: absolute;\n    border: 0.15em solid #fff;\n    transition: all 0.3s 0.08s linear;\n    top: 50%;\n    left: 50%;\n    width: 10.25em;\n    height: 3em;\n    transform: translate(-50%, -50%);\n  }\n\n  &:hover .border {\n    display: block;\n    width: 11.5em;\n    height: 3.9em;\n  }\n\n  .full-rounded {\n    border-radius: 5em;\n  }\n  .border full-rounded {\n  border-radius: 5em;\n  }`;\nState.init({\n    config:null\n})\nconst Click = () => {\n    const configs = Near.view(contractId, \"get_config\", {});\n    State.update({\n        config:configs\n    })\n}\n return(\n        <Button0008 onClick={Click}>\n          <span>Button 0008</span>\n          <div className=\"border full-rounded\"></div>\n        </Button0008>\n        )"
  },
  {
    "fileName": "Button009.js",
    "content": "const Button0009 = styled.button`\n  position: relative;\n  width: 11em;\n  height: 4em;\n  outline: none;\n  transition: 0.1s;\n  background-color: transparent;\n  border: none;\n  font-size: 13px;\n  font-weight: bold;\n  color: #ddebf0;\n  cursor: pointer;\n\n  #clip {\n    --color: #2761c3;\n    position: absolute;\n    top: 0;\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n    border: 5px double var(--color);\n    box-shadow: inset 0px 0px 15px #195480;\n    clip-path: polygon(\n      30% 0%,\n      70% 0%,\n      100% 30%,\n      100% 70%,\n      70% 100%,\n      30% 100%,\n      0% 70%,\n      0% 30%\n    );\n  }\n\n  .arrow {\n    position: absolute;\n    transition: 0.2s;\n    background-color: #2761c3;\n    top: 35%;\n    width: 11%;\n    height: 30%;\n  }\n\n  #leftArrow {\n    left: -13.5%;\n    clip-path: polygon(100% 0, 100% 100%, 0 50%);\n  }\n\n  #rightArrow {\n    clip-path: polygon(100% 49%, 0 0, 0 100%);\n    left: 103%;\n  }\n\n  &:hover #rightArrow {\n    background-color: #27c39f;\n    left: -14%;\n    animation: 0.6s ease-in-out both infinite alternate rightArrow8;\n  }\n\n  &:hover #leftArrow {\n    background-color: #27c39f;\n    left: 103%;\n    animation: 0.6s ease-in-out both infinite alternate leftArrow8;\n  }\n\n  .corner {\n    position: absolute;\n    width: 4em;\n    height: 4em;\n    background-color: #2761c3;\n    box-shadow: inset 1px 1px 8px #2781c3;\n    transform: scale(1) rotate(45deg);\n    transition: 0.2s;\n  }\n\n  #rightTop {\n    top: -1.98em;\n    left: 91%;\n  }\n\n  #leftTop {\n    top: -1.96em;\n    left: -3.0em;\n  }\n\n  #leftBottom {\n    top: 2.10em;\n    left: -2.15em;\n  }\n\n  #rightBottom {\n    top: 45%;\n    left: 88%;\n  }\n\n  &:hover #leftTop {\n    animation: 0.1s ease-in-out 0.05s both changeColor8,\n      0.2s linear 0.4s both lightEffect8;\n  }\n\n  &:hover #rightTop {\n    animation: 0.1s ease-in-out 0.15s both changeColor8,\n      0.2s linear 0.4s both lightEffect8;\n  }\n\n  &:hover #rightBottom {\n    animation: 0.1s ease-in-out 0.25s both changeColor8,\n      0.2s linear 0.4s both lightEffect8;\n  }\n\n  &:hover #leftBottom {\n    animation: 0.1s ease-in-out 0.35s both changeColor8,\n      0.2s linear 0.4s both lightEffect8;\n  }\n\n  &:hover .corner {\n    transform: scale(1.25) rotate(45deg);\n  }\n\n  &:hover #clip {\n    animation: 0.2s ease-in-out 0.55s both greenLight8;\n    --color: #27c39f;\n  }`;\n\nState.init({\n    donations:null\n})\nconst onClick = () => {\n    const donation = Near.view(contractId, \"get_donations\", {\n        from_index: 1 || null,\n        limit: 10 || null,\n      });\n    State.update({\n        donations:donation\n    })\n}\n return(\n        <Button0009 onClick={onClick}>\n          B u t t o n 0 0 0 9\n          <div id=\"clip\">\n            <div id=\"leftTop\" className=\"corner\"></div>\n            <div id=\"rightBottom\" className=\"corner\"></div>\n            <div id=\"rightTop\" className=\"corner\"></div>\n            <div id=\"leftBottom\" className=\"corner\"></div>\n          </div>\n          <span id=\"rightArrow\" className=\"arrow\"></span>\n          <span id=\"leftArrow\" className=\"arrow\"></span>\n        </Button0009>\n        )"
  },
  {
    "fileName": "Button010.js",
    "content": "const Button0010 = styled.button`\n  color: #ecf0f1;\n  font-size: 17px;\n  background-color: #e67e22;\n  border: 1px solid #f39c12;\n  border-radius: 5px;\n  padding: 10px;\n  box-shadow: 0px 6px 0px #d35400;\n  transition: all 0.1s;\n\n  &:active {\n    box-shadow: 0px 2px 0px #d35400;\n    position: relative;\n    top: 2px;\n  }`;\n  State.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n return(\n        <Button0010 onClick={onClick}>Button 0010 </Button0010>\n        )"
  },
  {
    "fileName": "Button011.js",
    "content": "const Button0011 = styled.button`\n  background: transparent;\n  position: relative;\n  padding: 5px 15px;\n  display: flex;\n  align-items: center;\n  font-size: 17px;\n  font-weight: 600;\n  text-decoration: none;\n  cursor: pointer;\n  border: 1px solid rgb(40, 144, 241);\n  border-radius: 25px;\n  outline: none;\n  overflow: hidden;\n  color: rgb(40, 144, 241);\n  transition: color 0.3s 0.1s ease-out;\n  text-align: center;\n\n  span {\n    margin: 10px;\n  }\n\n  &::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: auto;\n    content: '';\n    border-radius: 50%;\n    display: block;\n    width: 20em;\n    height: 20em;\n    left: -5em;\n    text-align: center;\n    transition: box-shadow 0.5s ease-out;\n    z-index: -1;\n  }\n\n  &:hover {\n    color: #fff;\n    border: 1px solid rgb(40, 144, 241);\n  }\n\n  &:hover::before {\n    box-shadow: inset 0 0 0 10em rgb(40, 144, 241);\n  }`;\nState.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n return(\n        <Button0011 onClick={onClick}>\n          <span>Button 0011</span>\n        </Button0011>\n        )"
  },
  {
    "fileName": "Button012.js",
    "content": "const Button0012 = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 45px;\n  height: 45px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  transition-duration: 0.3s;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.199);\n  background-color: rgb(255, 65, 65);\n\n  &:hover {\n    width: 125px; /* Adjust the width as needed */\n    border-radius: 40px;\n    transition-duration: 0.3s;\n  }\n\n  &:active {\n    transform: translate(2px, 2px);\n  }`;\n const Sign0012 = styled.div`  width: 45px;\n  transition-duration: 0.3s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    width: 17px;\n\n    path {\n      fill: white;\n    }\n  }`;\nconst Text0012 = styled.div`  position: absolute;\n  right: 0%;\n  width: 0%;\n  opacity: 0;\n  color: white;\n  font-size: 1.2em;\n  font-weight: 600;\n  transition-duration: 0.3s;\n${Button0012}:hover & {\n    opacity: 1;\n    width: auto;\n    transition-duration: 0.3s;\n    padding-right: 10px;\n  }`;\nState.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n return(\n      <Button0012 onClick={onClick}>\n          <Sign0012>\n            <svg viewBox=\"0 0 512 512\">\n              <path d=\"M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0-32 14.3 32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z\"></path>\n            </svg>\n          </Sign0012>\n          <Text0012>Logout</Text0012>\n        </Button0012>\n        )"
  },
  {
    "fileName": "Button013.js",
    "content": "const Button0013 = styled.button`\n /* Styling for the button in its default state */\n  display: inline-block;\n  position: relative;\n  padding: 10px 25px;\n  background-color: #4CC713;\n  color: white;\n  font-family: sans-serif;\n  text-decoration: none;\n  font-size: 0.9em;\n  text-align: center;\n  text-indent: 15px;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #45a21a;\n    color: white;\n\n    &:before {\n      border-color: #cdefbd; \n    }\n\n    &:after {\n      margin-top: 0; \n      opacity: 0.4;\n    }\n  }\n\n  &:before, &:after {\ncontent: ' ';    display: block;\n    position: absolute;\n    left: 15px;\n    top: 52%;\n  }\n\n  &:before {\n    width: 10px;\n    height: 2px;\n    border-style: solid;\n    border-width: 0 2px 2px;\n    transition: border-color 0.3s; \n  }\n\n  &:after {\n    width: 0;\n    height: 0;\n    margin-left: 1px;\n    margin-top: -7px;\n    border-style: solid;\n    border-width: 4px 4px 0 4px;\n    border-color: transparent;\n    border-top-color: inherit;\n    transition: margin-top 0.3s, opacity 0.3s; \n  }`;\n  State.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n return(\n        <Button0013 onClick={onClick}>Button 0013</Button0013>\n        )"
  },
  {
    "fileName": "Button014.js",
    "content": "const Button0014 = styled.button`\n  font-size: 14px;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  display: inline-block;\n  text-align: center;\n  font-weight: bold;\n  padding: 0.7em 2em;\n  border: 3px solid #FF0072;\n  border-radius: 2px;\n  position: relative;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.1);\n  color: #FF0072;\n  text-decoration: none;\n  transition: 0.3s ease all;\n  z-index: 1;\n\n  &:before {\n    transition: 0.5s all ease;\ncontent: ' ';    background-color: #FF0072;\n    position: absolute;\n    top: 0;\n    left: 50%;\n    right: 50%;\n    bottom: 0;\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover,\n  &:focus {\n    color: white;\n  }\n\n  &:hover:before,\n  &:focus:before {\n    transition: 0.5s all ease;\n    left: 0;\n    right: 0;\n    opacity: 1;\n  }\n\n  &:active {\n    transform: scale(0.9);\n  }`;\n\nState.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n return(\n        <Button0014 onClick={onClick}>Button 0014</Button0014>\n        )"
  },
  {
    "fileName": "Button015.js",
    "content": "const Button0015 = styled.button`\nposition: relative;\n  margin: auto;\n  padding: 12px 18px;\n  transition: all 0.2s ease;\n  border: none;\n  background: none;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    border-radius: 50px;\n    background: #b1dae7;\n    width: 45px;\n    height: 45px;\n    transition: all 0.3s ease;\n  }\n\n  span {\n    position: relative;\n    font-family: \"Ubuntu\", sans-serif;\n    font-size: 18px;\n    font-weight: 700;\n    letter-spacing: 0.05em;\n    color: #234567;\n  }\n\n  svg {\n    position: relative;\n    top: 0;\n    margin-left: 10px;\n    fill: none;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    stroke: #234567;\n    stroke-width: 2;\n    transform: translateX(-5px);\n    transition: all 0.3s ease;\n  }\n\n  &:hover:before {\n    width: 100%;\n    background: #b1dae7;\n  }\n\n  &:hover svg {\n    transform: translateX(0);\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }`;\n\nState.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n\n return(\n        <Button0015 className=\"cta\" onClick={onClick}>\n          <span>Next</span>\n          <svg viewBox=\"0 0 13 10\" height=\"10px\" width=\"15px\">\n            <path d=\"M1,5 L11,5\"></path>\n            <polyline points=\"8 1 12 5 8 9\"></polyline>\n          </svg>\n        </Button0015>        \n        )"
  },
  {
    "fileName": "Button016.js",
    "content": "const Button0016 = styled.button`\n  width: 150px;\n  height: 60px;\n  border: 3px solid #315cfd;\n  border-radius: 45px;\n  transition: all 0.3s;\n  cursor: pointer;\n  background: white;\n  font-size: 1.2em;\n  font-weight: 550;\n  font-family: 'Montserrat', sans-serif;\n\n  &:hover {\n    background: #315cfd;\n    color: white;\n    font-size: 1.5em;\n  }`;\n\nState.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n\n return(\n        <Button0016 onClick={onClick}>Button 0016</Button0016>\n        )"
  },
  {
    "fileName": "Button017.js",
    "content": "const Button0017 = styled.button`\n  padding: 15px 25px;\n  border: unset;\n  border-radius: 15px;\n  color: #212121;\n  z-index: 1;\n  background: #e8e8e8;\n  position: relative;\n  font-weight: 1000;\n  font-size: 17px;\n  box-shadow: 4px 8px 19px -3px rgba(0, 0, 0, 0.27);\n  transition: all 250ms;\n  overflow: hidden;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 0;\n    border-radius: 15px;\n    background-color: #212121;\n    z-index: -1;\n    box-shadow: 4px 8px 19px -3px rgba(0, 0, 0, 0.27);\n    transition: all 250ms;\n  }\n\n  &:hover {\n    color: #e8e8e8;\n    background: #212121;\n\n    &:before {\n      width: 100%;\n    }\n  }`;\n\nState.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n\n return(\n        <Button0017 onClick={onClick}>Button 0017</Button0017>\n        )"
  },
  {
    "fileName": "Button018.js",
    "content": "const Button0018 = styled.button`\n  outline: none;\n  cursor: pointer;\n  border: none;\n  padding: 0.9rem 2rem;\n  margin: 0;\n  font-family: inherit;\n  font-size: inherit;\n  position: relative;\n  display: inline-block;\n  letter-spacing: 0.05rem;\n  font-weight: 700;\n  font-size: 17px;\n  border-radius: 500px;\n  overflow: hidden;\n  background: #66ff66;\n  color: ghostwhite;\n\n  span {\n    position: relative;\n    z-index: 10;\n    transition: color 0.4s;\n  }\n\n  &:hover span {\n    color: black;\n  }\n\n  &::before,\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n  }\n\n  &::before {\n    content: \"\";\n    background: #000;\n    width: 120%;\n    left: -10%;\n    transform: skew(30deg);\n    transition: transform 0.4s cubic-bezier(0.3, 1, 0.8, 1);\n  }\n\n  &:hover::before {\n    transform: translate3d(100%, 0, 0);\n  }`;\n\nState.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n\n return(\n        <Button0018 onClick={onClick}>\n          <span>Button 0018</span>\n        </Button0018>        )"
  },
  {
    "fileName": "Button019.js",
    "content": "const Button0019 = styled.button`\n  display: inline-block; \n  cursor: pointer;\n  color: white;\n  margin: 0 auto;\n  position: relative;\n  text-decoration: none;\n  font-weight: 600;\n  border-radius: 6px;\n  overflow: hidden;\n  padding: 3px;\n  isolation: isolate;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(115deg, #4fcf70, #fad648, #a767e5, #12bcfe, #44ce7b);\n    background-size: 200% 100%;\n    animation: gradientMove 1.5s linear infinite;\n    border-radius: 6px;\n  }\n\n  span {\n    position: relative;\n    display: inline-block;\n    padding: 1rem 1.5rem;\n    font-size: 1.1rem;\n    background: #000;\n    border-radius: 3px;\n    height: 100%;\n    z-index: 1;\n    text-decoration: none;\n  }\n  \n  @keyframes gradientMove {\n    0% {\n      background-position: 200% 0;\n    }\n    100% {\n      background-position: -200% 0;\n    }\n  }`;\n\n  State.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n\n return(\n        <Button0019>\n          <span>Button 0019</span>\n        </Button0019>      )"
  },
  {
    "fileName": "Button020.js",
    "content": "const Button0020 = styled.button`\n  padding: 15px 20px;\n  font-size: 16px;\n  background: transparent;\n  border: none;\n  position: relative;\n  color: #f0f0f0;\n  z-index: 1;\n  cursor: pointer;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n    transition: all 0.4s;\n    transform: translate(0%, 0%);\n    width: 100%;\n    height: 100%;\n    background: #28282d;\n    border-radius: 10px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n    transition: all 0.4s;\n    transform: translate(10px, 10px);\n    width: 35px;\n    height: 35px;\n    background: #ffffff15;\n    backdrop-filter: blur(5px);\n    border-radius: 50px;\n  }\n\n  &:hover::before {\n    transform: translate(5%, 20%);\n    width: 110%;\n    height: 110%;\n  }\n\n  &:hover::after {\n    border-radius: 10px;\n    transform: translate(0, 0);\n    width: 100%;\n    height: 100%;\n  }\n\n  &:active::after {\n    transition: 0s;\n    transform: translate(0, 5%);\n  }`;\n\n  State.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n\n return(\n        <Button0020 onClick={onClick}>Button 0020</Button0020>\n      )"
  },
  {
    "fileName": "Button021.js",
    "content": "const Button0021 = styled.button`\n\n  position: relative;\n  text-decoration: none;\n  font-size: 15px;\n  text-transform: uppercase;\n  letter-spacing: 5px;\n  line-height: 48px;\n  width: 160px;\n  font-weight: bold;\n  height: 55px;\n  cursor: pointer;\n  background: transparent;\n  -webkit-box-reflect: bottom 1px linear-gradient(transparent, #0004);\n  overflow: hidden;\n\n  span {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    top: 4px;\n    right: 4px;\n    bottom: 4px;\n    left: 4px;\n    text-align: center;\n    background: #2E2E2E;\n    color: rgba(255, 255, 255, 0.781);\n    transition: 0.5s;\n    z-index: 1;\n  }\n\n  &:hover span {\n    color: rgba(255, 255, 255, 1);\n  }\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-size: 400%;\n    opacity: 0;\n    transition: 0.5s;\n    background: linear-gradient(45deg, #91155d, #525296, #0f0, #ff0, #fb0094, #00f, #0f0, #ff0);\n    animation: animate123 20% linear infinite;\n  }\n\n  &::after {\n    filter: blur(20px);\n  }\n\n  &:hover::before,\n  &:hover::after {\n    opacity: 1;\n  }\n\n  span::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50%;\n    background: rgba(255, 255, 255, 0.1);\n  }\n}\n\n@keyframes animate123 {\n  0% {\n    background-position: 0 0;\n  }\n\n  50% {\n    background-position: 300% 0;\n  }\n\n  100% {\n    background-position: 0 0;\n  }\n}\n`;\n\nState.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n\n return(\n        <Button0021 onClick={onClick}>\n          <span>Button0021</span>\n        </Button0021>      )"
  },
  {
    "fileName": "Button022.js",
    "content": "const Button0022 = styled.button`\n\n  position: relative;\n  border: none;\n  font-size: 14px;\n  font-family: inherit;\n  color: #fff;\n  width: 9em;\n  height: 3em;\n  line-height: 2em;\n  text-align: center;\n  background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n  background-size: 300%;\n  border-radius: 30px;\n  z-index: 1;\n  cursor: pointer;\n\n  &:hover {\n    animation: ani 8s linear infinite;\n    border: none;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: -5px;\n    left: -5px;\n    right: -5px;\n    bottom: -5px;\n    z-index: -1;\n    background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n    background-size: 400%;\n    border-radius: 35px;\n    transition: 1s;\n  }\n\n  &:hover::before {\n    filter: blur(20px);\n  }\n\n  &:active {\n    background: linear-gradient(32deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);\n  }\n\n  @keyframes ani {\n    0% {\n      background-position: 0%;\n    }\n\n    100% {\n      background-position: 400%;\n    }\n  }\n`;\n\nState.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n\n return(\n        <Button0022 onClick={onClick}>Button 0022</Button0022>\n      )"
  },
  {
    "fileName": "Button023.js",
    "content": "const Button0024 = styled.button`\n  font-size: 16px;\n  font-weight: 700;\n  color: #ff7576;\n  background-color: #2b3044;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 12px 24px;\n  position: relative;\n  line-height: 24px;\n  border-radius: 9px;\n  box-shadow: 0px 1px 2px #2b3044, 0px 4px 16px #2b3044;\n  transform-style: preserve-3d;\n  transform: scale(var(--s, 1)) perspective(600px)\n    rotateX(var(--rx, 0deg)) rotateY(var(--ry, 0deg));\n  perspective: 600px;\n  transition: transform 0.1s;\n\n  .sp {\n    background: linear-gradient(\n      90deg,\n      #866ee7,\n      #ea60da,\n      #ed8f57,\n      #fbd41d,\n      #2cca91\n    );\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    text-fill-color: transparent;\n    display: block;\n  }\n\n  &:active {\n    transition: 0.3s;\n    transform: scale(0.93);\n  }\n`;\n\nState.init({\n    count: 0,\n})\nconst onClick = () => {\n    State.update({count:state.count + 1})\n}\n\n return(\n         <Button0024 onClick={onClick} data-label=\"Button0024\">\n          <span className=\"sp\">Button 0024</span>\n        </Button0024>\n              )"
  },
  {
    "fileName": "ButtonGroup.js",
    "content": "const onClick = () => {};\nreturn (\n  <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Left\n    </button>\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Middle\n    </button>\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Right\n    </button>\n  </div>\n);\n"
  },
  {
    "fileName": "ButtonWithNearCall.js",
    "content": "const activeAccountId = context.accountId;\nconst onClick = () => {\n  const gas = 300000000000000;\n  const deposit = 10000000000000000000000;\n  Near.call([\n    {\n      contractName: \"genadrop-contract.nftgen.near\",\n      methodName: \"nft_mint\",\n      args: {\n        token_id: `${Date.now()}`,\n        metadata: {\n          title: \"test\",\n          description: \"testing\",\n          media: `https://ipfs.io/ipfs/bafkreie6g22yhzlvdpeovkedlkhemjs6qxxqw5rpua67yj3tjww73r6fui`,\n          reference: `ipfs://bafkreie6g22yhzlvdpeovkedlkhemjs6qxxqw5rpua67yj3tjww73r6fui`,\n        },\n        receiver_id: activeAccountId,\n      },\n      gas: gas,\n      deposit: deposit,\n    },\n  ]);\n};\nreturn (\n  <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n    Mint NFT\n  </button>\n);\n"
  },
  {
    "fileName": "ButtonWithNearState.js",
    "content": "State.init({\n    count: 0,\n  });\n  const onClick = () => {\n    State.count + 1;\n  };\n  return (\n    <button type=\"button\" onClick={onClick} class=\"btn btn-primary\">\n      Count\n    </button>\n);  "
  },
  {
    "fileName": "Forms.js",
    "content": "State.init({\n    email: \"\",\n    pass: \"\",\n    isCheck: false,\n  });\n  const emailChange = (e) => {\n    State.update({\n      email: e.target.value,\n    });\n  };\n  const passChange = (e) => {\n    State.update({\n      pass: e.target.value,\n    });\n  };\n  const isCheck = () => {\n    State.update({\n      isCheck: !isCheck,\n    });\n  };\n  return (\n    <div>\n      <div class=\"mb-3\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">\n          Email address\n        </label>\n        <input autocomplete\n          type=\"email\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n          onChange={emailChange}\n          value={state.email}\n        />\n        <div id=\"emailHelp\" class=\"form-text\">\n          We'll never share your email with anyone else.\n        </div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"exampleInputPassword1\" class=\"form-label\">\n          Password\n        </label>\n        <input autocomplete\n          type=\"password\"\n          onChange={passChange}\n          value={state.pass}\n          class=\"form-control\"\n          id=\"exampleInputPassword1\"\n        />\n      </div>\n      <div class=\"mb-3 form-check\">\n        <input\n          onChange={isCheck}\n          type=\"checkbox\"\n          class=\"form-check-input\"\n          id=\"exampleCheck1\"\n        />\n        <label class=\"form-check-label\" for=\"exampleCheck1\">\n          Check me out\n        </label>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">\n        Submit\n      </button>\n    </div>\n  );  "
  },
  {
    "fileName": "FormsCus.js",
    "content": "State.init({\n  fromIndex: 0,\n  limit: 0,\n  isCheck: false,\n  data: \"\",\n});\nconst fromIndex = (e) => {\n  State.update({\n    fromIndex: e.target.value,\n  });\n};\nconst limit = (e) => {\n  State.update({\n    limit: e.target.value,\n  });\n};\nconst isCheck = () => {\n  State.update({\n    isCheck: !isCheck,\n  });\n};\nconst handleClick = () => {\n  const datas = Near.view(\"donate.potlock.near\", \"get_donations\", {\n    from_index: Number(state.fromIndex) || null,\n    limit: Number(state.limit) || null,\n  });\n  State.update({ data: datas });\n};\n\nreturn (\n  <div>\n    <div class=\"mb-3\">\n      <label for=\"fromIndex\" class=\"form-label\">\n        From Index\n      </label>\n      <input\n        autocomplete\n        type=\"text\"\n        class=\"form-control\"\n        id=\"fromIndex\"\n        onChange={fromIndex}\n        value={state.fromIndex}\n      />\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"limit\" class=\"form-label\">\n        Password\n      </label>\n      <input\n        autocomplete\n        type=\"text\"\n        onChange={limit}\n        value={state.limit}\n        class=\"form-control\"\n        id=\"limit\"\n      />\n    </div>\n    <div class=\"mb-3 form-check\">\n      <input\n        onChange={isCheck}\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        id=\"exampleCheck1\"\n      />\n      <label class=\"form-check-label\" for=\"exampleCheck1\">\n        Check me out\n      </label>\n    </div>\n    <button onClick={handleClick} type=\"submit\" class=\"btn btn-primary\">\n      Submit\n    </button>\n  </div>\n);\n"
  }
]